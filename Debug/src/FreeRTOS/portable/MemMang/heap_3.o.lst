   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"heap_3.c"
  23              	.Ltext0:
  24              		.file 1 "../src/FreeRTOS/portable/MemMang/heap_3.c"
 3918              		.align	2
 3919              		.global	pvPortMalloc
 3920              		.thumb
 3921              		.thumb_func
 3923              	pvPortMalloc:
 3924              	.LFB29:
   1:../src/FreeRTOS/portable/MemMang/heap_3.c **** /*
   2:../src/FreeRTOS/portable/MemMang/heap_3.c ****     FreeRTOS V7.1.0 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	
   4:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
   5:../src/FreeRTOS/portable/MemMang/heap_3.c ****     ***************************************************************************
   6:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *                                                                       *
   7:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
   8:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    Complete, revised, and edited pdf reference manuals are also       *
   9:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    available.                                                         *
  10:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *                                                                       *
  11:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  12:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    ensuring you get running as quickly as possible and with an        *
  13:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  14:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    the FreeRTOS project to continue with its mission of providing     *
  15:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    professional grade, cross platform, de facto standard solutions    *
  16:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    for microcontrollers - completely free of charge!                  *
  17:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *                                                                       *
  18:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  19:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *                                                                       *
  20:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  21:../src/FreeRTOS/portable/MemMang/heap_3.c ****      *                                                                       *
  22:../src/FreeRTOS/portable/MemMang/heap_3.c ****     ***************************************************************************
  23:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  24:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  25:../src/FreeRTOS/portable/MemMang/heap_3.c ****     This file is part of the FreeRTOS distribution.
  26:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  27:../src/FreeRTOS/portable/MemMang/heap_3.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  28:../src/FreeRTOS/portable/MemMang/heap_3.c ****     the terms of the GNU General Public License (version 2) as published by the
  29:../src/FreeRTOS/portable/MemMang/heap_3.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  30:../src/FreeRTOS/portable/MemMang/heap_3.c ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  31:../src/FreeRTOS/portable/MemMang/heap_3.c ****     distribute a combined work that includes FreeRTOS without being obliged to
  32:../src/FreeRTOS/portable/MemMang/heap_3.c ****     provide the source code for proprietary components outside of the FreeRTOS
  33:../src/FreeRTOS/portable/MemMang/heap_3.c ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  34:../src/FreeRTOS/portable/MemMang/heap_3.c ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  35:../src/FreeRTOS/portable/MemMang/heap_3.c ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  36:../src/FreeRTOS/portable/MemMang/heap_3.c ****     more details. You should have received a copy of the GNU General Public
  37:../src/FreeRTOS/portable/MemMang/heap_3.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  38:../src/FreeRTOS/portable/MemMang/heap_3.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  39:../src/FreeRTOS/portable/MemMang/heap_3.c ****     by writing to Richard Barry, contact details for whom are available on the
  40:../src/FreeRTOS/portable/MemMang/heap_3.c ****     FreeRTOS WEB site.
  41:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  42:../src/FreeRTOS/portable/MemMang/heap_3.c ****     1 tab == 4 spaces!
  43:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  44:../src/FreeRTOS/portable/MemMang/heap_3.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  45:../src/FreeRTOS/portable/MemMang/heap_3.c ****     contact details.
  46:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  47:../src/FreeRTOS/portable/MemMang/heap_3.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  48:../src/FreeRTOS/portable/MemMang/heap_3.c ****     critical systems.
  49:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  50:../src/FreeRTOS/portable/MemMang/heap_3.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  51:../src/FreeRTOS/portable/MemMang/heap_3.c ****     licensing and training services.
  52:../src/FreeRTOS/portable/MemMang/heap_3.c **** */
  53:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  54:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  55:../src/FreeRTOS/portable/MemMang/heap_3.c **** /*
  56:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * Implementation of pvPortMalloc() and vPortFree() that relies on the
  57:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * compilers own malloc() and free() implementations.
  58:../src/FreeRTOS/portable/MemMang/heap_3.c ****  *
  59:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * This file can only be used if the linker is configured to to generate
  60:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * a heap memory area.
  61:../src/FreeRTOS/portable/MemMang/heap_3.c ****  *
  62:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * See heap_2.c and heap_1.c for alternative implementations, and the memory
  63:../src/FreeRTOS/portable/MemMang/heap_3.c ****  * management pages of http://www.FreeRTOS.org for more information.
  64:../src/FreeRTOS/portable/MemMang/heap_3.c ****  */
  65:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  66:../src/FreeRTOS/portable/MemMang/heap_3.c **** #include <stdlib.h>
  67:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  68:../src/FreeRTOS/portable/MemMang/heap_3.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  69:../src/FreeRTOS/portable/MemMang/heap_3.c **** all the API functions to use the MPU wrappers.  That should only be done when
  70:../src/FreeRTOS/portable/MemMang/heap_3.c **** task.h is included from an application file. */
  71:../src/FreeRTOS/portable/MemMang/heap_3.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  72:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  73:../src/FreeRTOS/portable/MemMang/heap_3.c **** #include "FreeRTOS.h"
  74:../src/FreeRTOS/portable/MemMang/heap_3.c **** #include "task.h"
  75:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  76:../src/FreeRTOS/portable/MemMang/heap_3.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  78:../src/FreeRTOS/portable/MemMang/heap_3.c **** /*-----------------------------------------------------------*/
  79:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  80:../src/FreeRTOS/portable/MemMang/heap_3.c **** void *pvPortMalloc( size_t xWantedSize )
  81:../src/FreeRTOS/portable/MemMang/heap_3.c **** {
 3925              		.loc 1 81 0
 3926              		.cfi_startproc
 3927              		@ args = 0, pretend = 0, frame = 16
 3928              		@ frame_needed = 1, uses_anonymous_args = 0
 3929 0000 80B5     		push	{r7, lr}
 3930              	.LCFI0:
 3931              		.cfi_def_cfa_offset 8
 3932 0002 84B0     		sub	sp, sp, #16
 3933              	.LCFI1:
 3934              		.cfi_def_cfa_offset 24
 3935 0004 00AF     		add	r7, sp, #0
 3936              		.cfi_offset 14, -4
 3937              		.cfi_offset 7, -8
 3938              	.LCFI2:
 3939              		.cfi_def_cfa_register 7
 3940 0006 7860     		str	r0, [r7, #4]
  82:../src/FreeRTOS/portable/MemMang/heap_3.c **** void *pvReturn;
  83:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  84:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	vTaskSuspendAll();
 3941              		.loc 1 84 0
 3942 0008 FFF7FEFF 		bl	vTaskSuspendAll
  85:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	{
  86:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		pvReturn = malloc( xWantedSize );
 3943              		.loc 1 86 0
 3944 000c 7868     		ldr	r0, [r7, #4]
 3945 000e FFF7FEFF 		bl	malloc
 3946 0012 0346     		mov	r3, r0
 3947 0014 FB60     		str	r3, [r7, #12]
  87:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	}
  88:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	xTaskResumeAll();
 3948              		.loc 1 88 0
 3949 0016 FFF7FEFF 		bl	xTaskResumeAll
  89:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
  90:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
  91:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	{
  92:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		if( pvReturn == NULL )
  93:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		{
  94:../src/FreeRTOS/portable/MemMang/heap_3.c **** 			extern void vApplicationMallocFailedHook( void );
  95:../src/FreeRTOS/portable/MemMang/heap_3.c **** 			vApplicationMallocFailedHook();
  96:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		}
  97:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	}
  98:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	#endif
  99:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	
 100:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	return pvReturn;
 3950              		.loc 1 100 0
 3951 001a FB68     		ldr	r3, [r7, #12]
 101:../src/FreeRTOS/portable/MemMang/heap_3.c **** }
 3952              		.loc 1 101 0
 3953 001c 1846     		mov	r0, r3
 3954 001e 07F11007 		add	r7, r7, #16
 3955 0022 BD46     		mov	sp, r7
 3956 0024 80BD     		pop	{r7, pc}
 3957              		.cfi_endproc
 3958              	.LFE29:
 3960 0026 00BF     		.align	2
 3961              		.global	vPortFree
 3962              		.thumb
 3963              		.thumb_func
 3965              	vPortFree:
 3966              	.LFB30:
 102:../src/FreeRTOS/portable/MemMang/heap_3.c **** /*-----------------------------------------------------------*/
 103:../src/FreeRTOS/portable/MemMang/heap_3.c **** 
 104:../src/FreeRTOS/portable/MemMang/heap_3.c **** void vPortFree( void *pv )
 105:../src/FreeRTOS/portable/MemMang/heap_3.c **** {
 3967              		.loc 1 105 0
 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 8
 3970              		@ frame_needed = 1, uses_anonymous_args = 0
 3971 0028 80B5     		push	{r7, lr}
 3972              	.LCFI3:
 3973              		.cfi_def_cfa_offset 8
 3974 002a 82B0     		sub	sp, sp, #8
 3975              	.LCFI4:
 3976              		.cfi_def_cfa_offset 16
 3977 002c 00AF     		add	r7, sp, #0
 3978              		.cfi_offset 14, -4
 3979              		.cfi_offset 7, -8
 3980              	.LCFI5:
 3981              		.cfi_def_cfa_register 7
 3982 002e 7860     		str	r0, [r7, #4]
 106:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	if( pv )
 3983              		.loc 1 106 0
 3984 0030 7B68     		ldr	r3, [r7, #4]
 3985 0032 002B     		cmp	r3, #0
 3986 0034 06D0     		beq	.L2
 107:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	{
 108:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		vTaskSuspendAll();
 3987              		.loc 1 108 0
 3988 0036 FFF7FEFF 		bl	vTaskSuspendAll
 109:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		{
 110:../src/FreeRTOS/portable/MemMang/heap_3.c **** 			free( pv );
 3989              		.loc 1 110 0
 3990 003a 7868     		ldr	r0, [r7, #4]
 3991 003c FFF7FEFF 		bl	free
 111:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		}
 112:../src/FreeRTOS/portable/MemMang/heap_3.c **** 		xTaskResumeAll();
 3992              		.loc 1 112 0
 3993 0040 FFF7FEFF 		bl	xTaskResumeAll
 3994              	.L2:
 113:../src/FreeRTOS/portable/MemMang/heap_3.c **** 	}
 114:../src/FreeRTOS/portable/MemMang/heap_3.c **** }
 3995              		.loc 1 114 0
 3996 0044 07F10807 		add	r7, r7, #8
 3997 0048 BD46     		mov	sp, r7
 3998 004a 80BD     		pop	{r7, pc}
 3999              		.cfi_endproc
 4000              	.LFE30:
 4002              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 heap_3.c
     /tmp/ccjKk0Jd.s:3918   .text:00000000 $t
     /tmp/ccjKk0Jd.s:3923   .text:00000000 pvPortMalloc
     /tmp/ccjKk0Jd.s:3965   .text:00000028 vPortFree
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
malloc
xTaskResumeAll
free
