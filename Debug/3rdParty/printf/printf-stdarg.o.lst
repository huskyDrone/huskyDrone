   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"printf-stdarg.c"
  23              	.Ltext0:
  24              		.file 1 "../3rdParty/printf/printf-stdarg.c"
 452              		.align	2
 453              		.thumb
 454              		.thumb_func
 456              	printchar:
 457              	.LFB0:
   1:../3rdParty/printf/printf-stdarg.c **** /*
   2:../3rdParty/printf/printf-stdarg.c **** 	Copyright 2001, 2002 Georges Menie (www.menie.org)
   3:../3rdParty/printf/printf-stdarg.c **** 	stdarg version contributed by Christian Ettinger
   4:../3rdParty/printf/printf-stdarg.c **** 
   5:../3rdParty/printf/printf-stdarg.c ****     This program is free software; you can redistribute it and/or modify
   6:../3rdParty/printf/printf-stdarg.c ****     it under the terms of the GNU Lesser General Public License as published by
   7:../3rdParty/printf/printf-stdarg.c ****     the Free Software Foundation; either version 2 of the License, or
   8:../3rdParty/printf/printf-stdarg.c ****     (at your option) any later version.
   9:../3rdParty/printf/printf-stdarg.c **** 
  10:../3rdParty/printf/printf-stdarg.c ****     This program is distributed in the hope that it will be useful,
  11:../3rdParty/printf/printf-stdarg.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../3rdParty/printf/printf-stdarg.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:../3rdParty/printf/printf-stdarg.c ****     GNU Lesser General Public License for more details.
  14:../3rdParty/printf/printf-stdarg.c **** 
  15:../3rdParty/printf/printf-stdarg.c ****     You should have received a copy of the GNU Lesser General Public License
  16:../3rdParty/printf/printf-stdarg.c ****     along with this program; if not, write to the Free Software
  17:../3rdParty/printf/printf-stdarg.c ****     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  18:../3rdParty/printf/printf-stdarg.c **** */
  19:../3rdParty/printf/printf-stdarg.c **** 
  20:../3rdParty/printf/printf-stdarg.c **** /*
  21:../3rdParty/printf/printf-stdarg.c **** 	putchar is the only external dependency for this file,
  22:../3rdParty/printf/printf-stdarg.c **** 	if you have a working putchar, leave it commented out.
  23:../3rdParty/printf/printf-stdarg.c **** 	If not, uncomment the define below and
  24:../3rdParty/printf/printf-stdarg.c **** 	replace outbyte(c) by your own function call.
  25:../3rdParty/printf/printf-stdarg.c **** 
  26:../3rdParty/printf/printf-stdarg.c **** */
  27:../3rdParty/printf/printf-stdarg.c **** 
  28:../3rdParty/printf/printf-stdarg.c **** #define putchar(c) c
  29:../3rdParty/printf/printf-stdarg.c **** 
  30:../3rdParty/printf/printf-stdarg.c **** #include <stdarg.h>
  31:../3rdParty/printf/printf-stdarg.c **** 
  32:../3rdParty/printf/printf-stdarg.c **** static void printchar(char **str, int c)
  33:../3rdParty/printf/printf-stdarg.c **** {
 458              		.loc 1 33 0
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              	.LCFI0:
 464 0002 83B0     		sub	sp, sp, #12
 465              	.LCFI1:
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI2:
 468 0006 7860     		str	r0, [r7, #4]
 469 0008 3960     		str	r1, [r7, #0]
  34:../3rdParty/printf/printf-stdarg.c **** 	//extern int putchar(int c);
  35:../3rdParty/printf/printf-stdarg.c **** 	
  36:../3rdParty/printf/printf-stdarg.c **** 	if (str) {
 470              		.loc 1 36 0
 471 000a 7B68     		ldr	r3, [r7, #4]
 472 000c 002B     		cmp	r3, #0
 473 000e 0AD0     		beq	.L3
  37:../3rdParty/printf/printf-stdarg.c **** 		**str = (char)c;
 474              		.loc 1 37 0
 475 0010 7B68     		ldr	r3, [r7, #4]
 476 0012 1B68     		ldr	r3, [r3, #0]
 477 0014 3A68     		ldr	r2, [r7, #0]
 478 0016 D2B2     		uxtb	r2, r2
 479 0018 1A70     		strb	r2, [r3, #0]
  38:../3rdParty/printf/printf-stdarg.c **** 		++(*str);
 480              		.loc 1 38 0
 481 001a 7B68     		ldr	r3, [r7, #4]
 482 001c 1B68     		ldr	r3, [r3, #0]
 483 001e 03F10102 		add	r2, r3, #1
 484 0022 7B68     		ldr	r3, [r7, #4]
 485 0024 1A60     		str	r2, [r3, #0]
 486              	.L3:
  39:../3rdParty/printf/printf-stdarg.c **** 	}
  40:../3rdParty/printf/printf-stdarg.c **** 	else
  41:../3rdParty/printf/printf-stdarg.c **** 	{ 
  42:../3rdParty/printf/printf-stdarg.c **** 		(void)putchar(c);
  43:../3rdParty/printf/printf-stdarg.c **** 	}
  44:../3rdParty/printf/printf-stdarg.c **** }
 487              		.loc 1 44 0
 488 0026 07F10C07 		add	r7, r7, #12
 489 002a BD46     		mov	sp, r7
 490 002c 80BC     		pop	{r7}
 491 002e 7047     		bx	lr
 492              	.LFE0:
 494              		.align	2
 495              		.thumb
 496              		.thumb_func
 498              	prints:
 499              	.LFB1:
  45:../3rdParty/printf/printf-stdarg.c **** 
  46:../3rdParty/printf/printf-stdarg.c **** #define PAD_RIGHT 1
  47:../3rdParty/printf/printf-stdarg.c **** #define PAD_ZERO 2
  48:../3rdParty/printf/printf-stdarg.c **** 
  49:../3rdParty/printf/printf-stdarg.c **** static int prints(char **out, const char *string, int width, int pad)
  50:../3rdParty/printf/printf-stdarg.c **** {
 500              		.loc 1 50 0
 501              		@ args = 0, pretend = 0, frame = 16
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503 0030 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 504              	.LCFI3:
 505 0034 84B0     		sub	sp, sp, #16
 506              	.LCFI4:
 507 0036 00AF     		add	r7, sp, #0
 508              	.LCFI5:
 509 0038 F860     		str	r0, [r7, #12]
 510 003a B960     		str	r1, [r7, #8]
 511 003c 7A60     		str	r2, [r7, #4]
 512 003e 3B60     		str	r3, [r7, #0]
  51:../3rdParty/printf/printf-stdarg.c **** 	register int pc = 0, padchar = ' ';
 513              		.loc 1 51 0
 514 0040 4FF00004 		mov	r4, #0
 515 0044 4FF02006 		mov	r6, #32
  52:../3rdParty/printf/printf-stdarg.c **** 
  53:../3rdParty/printf/printf-stdarg.c **** 	if (width > 0) {
 516              		.loc 1 53 0
 517 0048 7B68     		ldr	r3, [r7, #4]
 518 004a 002B     		cmp	r3, #0
 519 004c 1EDD     		ble	.L5
 520              	.LBB2:
  54:../3rdParty/printf/printf-stdarg.c **** 		register int len = 0;
 521              		.loc 1 54 0
 522 004e 4FF00005 		mov	r5, #0
  55:../3rdParty/printf/printf-stdarg.c **** 		register const char *ptr;
  56:../3rdParty/printf/printf-stdarg.c **** 		for (ptr = string; *ptr; ++ptr) ++len;
 523              		.loc 1 56 0
 524 0052 D7F80880 		ldr	r8, [r7, #8]
 525 0056 03E0     		b	.L6
 526              	.L7:
 527 0058 05F10105 		add	r5, r5, #1
 528 005c 08F10108 		add	r8, r8, #1
 529              	.L6:
 530 0060 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 531 0064 002B     		cmp	r3, #0
 532 0066 F7D1     		bne	.L7
  57:../3rdParty/printf/printf-stdarg.c **** 		if (len >= width) width = 0;
 533              		.loc 1 57 0
 534 0068 7B68     		ldr	r3, [r7, #4]
 535 006a 9D42     		cmp	r5, r3
 536 006c 03DB     		blt	.L8
 537 006e 4FF00003 		mov	r3, #0
 538 0072 7B60     		str	r3, [r7, #4]
 539 0074 03E0     		b	.L9
 540              	.L8:
  58:../3rdParty/printf/printf-stdarg.c **** 		else width -= len;
 541              		.loc 1 58 0
 542 0076 7B68     		ldr	r3, [r7, #4]
 543 0078 C5EB0303 		rsb	r3, r5, r3
 544 007c 7B60     		str	r3, [r7, #4]
 545              	.L9:
  59:../3rdParty/printf/printf-stdarg.c **** 		if (pad & PAD_ZERO) padchar = '0';
 546              		.loc 1 59 0
 547 007e 3B68     		ldr	r3, [r7, #0]
 548 0080 03F00203 		and	r3, r3, #2
 549 0084 002B     		cmp	r3, #0
 550 0086 01D0     		beq	.L5
 551 0088 4FF03006 		mov	r6, #48
 552              	.L5:
 553              	.LBE2:
  60:../3rdParty/printf/printf-stdarg.c **** 	}
  61:../3rdParty/printf/printf-stdarg.c **** 	if (!(pad & PAD_RIGHT)) {
 554              		.loc 1 61 0
 555 008c 3B68     		ldr	r3, [r7, #0]
 556 008e 03F00103 		and	r3, r3, #1
 557 0092 002B     		cmp	r3, #0
 558 0094 1BD1     		bne	.L18
  62:../3rdParty/printf/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 559              		.loc 1 62 0
 560 0096 09E0     		b	.L11
 561              	.L12:
  63:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, padchar);
 562              		.loc 1 63 0
 563 0098 F868     		ldr	r0, [r7, #12]
 564 009a 3146     		mov	r1, r6
 565 009c FFF7B0FF 		bl	printchar
  64:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 566              		.loc 1 64 0
 567 00a0 04F10104 		add	r4, r4, #1
 568              		.loc 1 62 0
 569 00a4 7B68     		ldr	r3, [r7, #4]
 570 00a6 03F1FF33 		add	r3, r3, #-1
 571 00aa 7B60     		str	r3, [r7, #4]
 572              	.L11:
 573 00ac 7B68     		ldr	r3, [r7, #4]
 574 00ae 002B     		cmp	r3, #0
 575 00b0 F2DC     		bgt	.L12
  65:../3rdParty/printf/printf-stdarg.c **** 		}
  66:../3rdParty/printf/printf-stdarg.c **** 	}
  67:../3rdParty/printf/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 576              		.loc 1 67 0
 577 00b2 0DE0     		b	.L13
 578              	.L14:
  68:../3rdParty/printf/printf-stdarg.c **** 		printchar (out, *string);
 579              		.loc 1 68 0
 580 00b4 BB68     		ldr	r3, [r7, #8]
 581 00b6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 582 00b8 F868     		ldr	r0, [r7, #12]
 583 00ba 1946     		mov	r1, r3
 584 00bc FFF7A0FF 		bl	printchar
  69:../3rdParty/printf/printf-stdarg.c **** 		++pc;
 585              		.loc 1 69 0
 586 00c0 04F10104 		add	r4, r4, #1
 587              		.loc 1 67 0
 588 00c4 BB68     		ldr	r3, [r7, #8]
 589 00c6 03F10103 		add	r3, r3, #1
 590 00ca BB60     		str	r3, [r7, #8]
 591 00cc 00E0     		b	.L13
 592              	.L18:
 593 00ce 00BF     		nop
 594              	.L13:
 595 00d0 BB68     		ldr	r3, [r7, #8]
 596 00d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 597 00d4 002B     		cmp	r3, #0
 598 00d6 EDD1     		bne	.L14
  70:../3rdParty/printf/printf-stdarg.c **** 	}
  71:../3rdParty/printf/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 599              		.loc 1 71 0
 600 00d8 09E0     		b	.L15
 601              	.L16:
  72:../3rdParty/printf/printf-stdarg.c **** 		printchar (out, padchar);
 602              		.loc 1 72 0
 603 00da F868     		ldr	r0, [r7, #12]
 604 00dc 3146     		mov	r1, r6
 605 00de FFF78FFF 		bl	printchar
  73:../3rdParty/printf/printf-stdarg.c **** 		++pc;
 606              		.loc 1 73 0
 607 00e2 04F10104 		add	r4, r4, #1
 608              		.loc 1 71 0
 609 00e6 7B68     		ldr	r3, [r7, #4]
 610 00e8 03F1FF33 		add	r3, r3, #-1
 611 00ec 7B60     		str	r3, [r7, #4]
 612              	.L15:
 613 00ee 7B68     		ldr	r3, [r7, #4]
 614 00f0 002B     		cmp	r3, #0
 615 00f2 F2DC     		bgt	.L16
  74:../3rdParty/printf/printf-stdarg.c **** 	}
  75:../3rdParty/printf/printf-stdarg.c **** 
  76:../3rdParty/printf/printf-stdarg.c **** 	return pc;
 616              		.loc 1 76 0
 617 00f4 2346     		mov	r3, r4
  77:../3rdParty/printf/printf-stdarg.c **** }
 618              		.loc 1 77 0
 619 00f6 1846     		mov	r0, r3
 620 00f8 07F11007 		add	r7, r7, #16
 621 00fc BD46     		mov	sp, r7
 622 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 623              	.LFE1:
 625 0102 00BF     		.align	2
 626              		.thumb
 627              		.thumb_func
 629              	printi:
 630              	.LFB2:
  78:../3rdParty/printf/printf-stdarg.c **** 
  79:../3rdParty/printf/printf-stdarg.c **** /* the following should be enough for 32 bit int */
  80:../3rdParty/printf/printf-stdarg.c **** #define PRINT_BUF_LEN 12
  81:../3rdParty/printf/printf-stdarg.c **** 
  82:../3rdParty/printf/printf-stdarg.c **** static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
  83:../3rdParty/printf/printf-stdarg.c **** {
 631              		.loc 1 83 0
 632              		@ args = 12, pretend = 0, frame = 32
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634 0104 2DE9F045 		push	{r4, r5, r6, r7, r8, sl, lr}
 635              	.LCFI6:
 636 0108 89B0     		sub	sp, sp, #36
 637              	.LCFI7:
 638 010a 00AF     		add	r7, sp, #0
 639              	.LCFI8:
 640 010c F860     		str	r0, [r7, #12]
 641 010e B960     		str	r1, [r7, #8]
 642 0110 7A60     		str	r2, [r7, #4]
 643 0112 3B60     		str	r3, [r7, #0]
  84:../3rdParty/printf/printf-stdarg.c **** 	char print_buf[PRINT_BUF_LEN];
  85:../3rdParty/printf/printf-stdarg.c **** 	register char *s;
  86:../3rdParty/printf/printf-stdarg.c **** 	register int t, neg = 0, pc = 0;
 644              		.loc 1 86 0
 645 0114 4FF0000A 		mov	sl, #0
 646 0118 4FF00008 		mov	r8, #0
  87:../3rdParty/printf/printf-stdarg.c **** 	register unsigned int u = (unsigned int)i;
 647              		.loc 1 87 0
 648 011c BD68     		ldr	r5, [r7, #8]
  88:../3rdParty/printf/printf-stdarg.c **** 
  89:../3rdParty/printf/printf-stdarg.c **** 	if (i == 0) {
 649              		.loc 1 89 0
 650 011e BB68     		ldr	r3, [r7, #8]
 651 0120 002B     		cmp	r3, #0
 652 0122 0FD1     		bne	.L20
  90:../3rdParty/printf/printf-stdarg.c **** 		print_buf[0] = '0';
 653              		.loc 1 90 0
 654 0124 4FF03003 		mov	r3, #48
 655 0128 3B75     		strb	r3, [r7, #20]
  91:../3rdParty/printf/printf-stdarg.c **** 		print_buf[1] = '\0';
 656              		.loc 1 91 0
 657 012a 4FF00003 		mov	r3, #0
 658 012e 7B75     		strb	r3, [r7, #21]
  92:../3rdParty/printf/printf-stdarg.c **** 		return prints (out, print_buf, width, pad);
 659              		.loc 1 92 0
 660 0130 07F11403 		add	r3, r7, #20
 661 0134 F868     		ldr	r0, [r7, #12]
 662 0136 1946     		mov	r1, r3
 663 0138 3A6C     		ldr	r2, [r7, #64]
 664 013a 7B6C     		ldr	r3, [r7, #68]
 665 013c FFF778FF 		bl	prints
 666 0140 0346     		mov	r3, r0
 667 0142 54E0     		b	.L21
 668              	.L20:
  93:../3rdParty/printf/printf-stdarg.c **** 	}
  94:../3rdParty/printf/printf-stdarg.c **** 
  95:../3rdParty/printf/printf-stdarg.c **** 	if (sg && b == 10 && i < 0) {
 669              		.loc 1 95 0
 670 0144 3B68     		ldr	r3, [r7, #0]
 671 0146 002B     		cmp	r3, #0
 672 0148 0BD0     		beq	.L22
 673 014a 7B68     		ldr	r3, [r7, #4]
 674 014c 0A2B     		cmp	r3, #10
 675 014e 08D1     		bne	.L22
 676 0150 BB68     		ldr	r3, [r7, #8]
 677 0152 002B     		cmp	r3, #0
 678 0154 05DA     		bge	.L22
  96:../3rdParty/printf/printf-stdarg.c **** 		neg = 1;
 679              		.loc 1 96 0
 680 0156 4FF0010A 		mov	sl, #1
  97:../3rdParty/printf/printf-stdarg.c **** 		u = (unsigned int)-i;
 681              		.loc 1 97 0
 682 015a BB68     		ldr	r3, [r7, #8]
 683 015c C3F10003 		rsb	r3, r3, #0
 684 0160 1D46     		mov	r5, r3
 685              	.L22:
  98:../3rdParty/printf/printf-stdarg.c **** 	}
  99:../3rdParty/printf/printf-stdarg.c **** 
 100:../3rdParty/printf/printf-stdarg.c **** 	s = print_buf + PRINT_BUF_LEN-1;
 686              		.loc 1 100 0
 687 0162 07F11403 		add	r3, r7, #20
 688 0166 03F10B04 		add	r4, r3, #11
 101:../3rdParty/printf/printf-stdarg.c **** 	*s = '\0';
 689              		.loc 1 101 0
 690 016a 4FF00003 		mov	r3, #0
 691 016e 2370     		strb	r3, [r4, #0]
 102:../3rdParty/printf/printf-stdarg.c **** 
 103:../3rdParty/printf/printf-stdarg.c **** 	while (u) {
 692              		.loc 1 103 0
 693 0170 17E0     		b	.L23
 694              	.L25:
 104:../3rdParty/printf/printf-stdarg.c **** 		t = (unsigned int)u % b;
 695              		.loc 1 104 0
 696 0172 7B68     		ldr	r3, [r7, #4]
 697 0174 B5FBF3F2 		udiv	r2, r5, r3
 698 0178 03FB02F3 		mul	r3, r3, r2
 699 017c C3EB0503 		rsb	r3, r3, r5
 700 0180 1E46     		mov	r6, r3
 105:../3rdParty/printf/printf-stdarg.c **** 		if( t >= 10 )
 701              		.loc 1 105 0
 702 0182 092E     		cmp	r6, #9
 703 0184 03DD     		ble	.L24
 106:../3rdParty/printf/printf-stdarg.c **** 			t += letbase - '0' - 10;
 704              		.loc 1 106 0
 705 0186 BB6C     		ldr	r3, [r7, #72]
 706 0188 A3F13A03 		sub	r3, r3, #58
 707 018c 1E44     		add	r6, r6, r3
 708              	.L24:
 107:../3rdParty/printf/printf-stdarg.c **** 		*--s = (char)(t + '0');
 709              		.loc 1 107 0
 710 018e 04F1FF34 		add	r4, r4, #-1
 711 0192 F3B2     		uxtb	r3, r6
 712 0194 03F13003 		add	r3, r3, #48
 713 0198 DBB2     		uxtb	r3, r3
 714 019a 2370     		strb	r3, [r4, #0]
 108:../3rdParty/printf/printf-stdarg.c **** 		u /= b;
 715              		.loc 1 108 0
 716 019c 7B68     		ldr	r3, [r7, #4]
 717 019e B5FBF3F5 		udiv	r5, r5, r3
 718              	.L23:
 719              		.loc 1 103 0
 720 01a2 002D     		cmp	r5, #0
 721 01a4 E5D1     		bne	.L25
 109:../3rdParty/printf/printf-stdarg.c **** 	}
 110:../3rdParty/printf/printf-stdarg.c **** 
 111:../3rdParty/printf/printf-stdarg.c **** 	if (neg) {
 722              		.loc 1 111 0
 723 01a6 BAF1000F 		cmp	sl, #0
 724 01aa 18D0     		beq	.L26
 112:../3rdParty/printf/printf-stdarg.c **** 		if( width && (pad & PAD_ZERO) ) {
 725              		.loc 1 112 0
 726 01ac 3B6C     		ldr	r3, [r7, #64]
 727 01ae 002B     		cmp	r3, #0
 728 01b0 10D0     		beq	.L27
 729 01b2 7B6C     		ldr	r3, [r7, #68]
 730 01b4 03F00203 		and	r3, r3, #2
 731 01b8 002B     		cmp	r3, #0
 732 01ba 0BD0     		beq	.L27
 113:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, '-');
 733              		.loc 1 113 0
 734 01bc F868     		ldr	r0, [r7, #12]
 735 01be 4FF02D01 		mov	r1, #45
 736 01c2 FFF71DFF 		bl	printchar
 114:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 737              		.loc 1 114 0
 738 01c6 08F10108 		add	r8, r8, #1
 115:../3rdParty/printf/printf-stdarg.c **** 			--width;
 739              		.loc 1 115 0
 740 01ca 3B6C     		ldr	r3, [r7, #64]
 741 01cc 03F1FF33 		add	r3, r3, #-1
 742 01d0 3B64     		str	r3, [r7, #64]
 743              		.loc 1 112 0
 744 01d2 04E0     		b	.L26
 745              	.L27:
 116:../3rdParty/printf/printf-stdarg.c **** 		}
 117:../3rdParty/printf/printf-stdarg.c **** 		else {
 118:../3rdParty/printf/printf-stdarg.c **** 			*--s = '-';
 746              		.loc 1 118 0
 747 01d4 04F1FF34 		add	r4, r4, #-1
 748 01d8 4FF02D03 		mov	r3, #45
 749 01dc 2370     		strb	r3, [r4, #0]
 750              	.L26:
 119:../3rdParty/printf/printf-stdarg.c **** 		}
 120:../3rdParty/printf/printf-stdarg.c **** 	}
 121:../3rdParty/printf/printf-stdarg.c **** 
 122:../3rdParty/printf/printf-stdarg.c **** 	return pc + prints (out, s, width, pad);
 751              		.loc 1 122 0
 752 01de F868     		ldr	r0, [r7, #12]
 753 01e0 2146     		mov	r1, r4
 754 01e2 3A6C     		ldr	r2, [r7, #64]
 755 01e4 7B6C     		ldr	r3, [r7, #68]
 756 01e6 FFF723FF 		bl	prints
 757 01ea 0346     		mov	r3, r0
 758 01ec 4344     		add	r3, r3, r8
 759              	.L21:
 123:../3rdParty/printf/printf-stdarg.c **** }
 760              		.loc 1 123 0
 761 01ee 1846     		mov	r0, r3
 762 01f0 07F12407 		add	r7, r7, #36
 763 01f4 BD46     		mov	sp, r7
 764 01f6 BDE8F085 		pop	{r4, r5, r6, r7, r8, sl, pc}
 765              	.LFE2:
 767              		.section	.rodata
 768              		.align	2
 769              	.LC0:
 770 0000 286E756C 		.ascii	"(null)\000"
 770      6C2900
 771 0007 00       		.text
 772 01fa 00BF     		.align	2
 773              		.thumb
 774              		.thumb_func
 776              	print:
 777              	.LFB3:
 124:../3rdParty/printf/printf-stdarg.c **** 
 125:../3rdParty/printf/printf-stdarg.c **** static int print( char **out, const char *format, va_list args )
 126:../3rdParty/printf/printf-stdarg.c **** {
 778              		.loc 1 126 0
 779              		@ args = 0, pretend = 0, frame = 24
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 01fc 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 782              	.LCFI9:
 783 0200 8AB0     		sub	sp, sp, #40
 784              	.LCFI10:
 785 0202 04AF     		add	r7, sp, #16
 786              	.LCFI11:
 787 0204 F860     		str	r0, [r7, #12]
 788 0206 B960     		str	r1, [r7, #8]
 789 0208 7A60     		str	r2, [r7, #4]
 127:../3rdParty/printf/printf-stdarg.c **** 	register int width, pad;
 128:../3rdParty/printf/printf-stdarg.c **** 	register int pc = 0;
 790              		.loc 1 128 0
 791 020a 4FF00004 		mov	r4, #0
 129:../3rdParty/printf/printf-stdarg.c **** 	char scr[2];
 130:../3rdParty/printf/printf-stdarg.c **** 
 131:../3rdParty/printf/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 792              		.loc 1 131 0
 793 020e EDE0     		b	.L30
 794              	.L50:
 132:../3rdParty/printf/printf-stdarg.c **** 		if (*format == '%') {
 795              		.loc 1 132 0
 796 0210 BB68     		ldr	r3, [r7, #8]
 797 0212 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 798 0214 252B     		cmp	r3, #37
 799 0216 40F0DB80 		bne	.L31
 133:../3rdParty/printf/printf-stdarg.c **** 			++format;
 800              		.loc 1 133 0
 801 021a BB68     		ldr	r3, [r7, #8]
 802 021c 03F10103 		add	r3, r3, #1
 803 0220 BB60     		str	r3, [r7, #8]
 134:../3rdParty/printf/printf-stdarg.c **** 			width = pad = 0;
 804              		.loc 1 134 0
 805 0222 4FF00006 		mov	r6, #0
 806 0226 3546     		mov	r5, r6
 135:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '\0') break;
 807              		.loc 1 135 0
 808 0228 BB68     		ldr	r3, [r7, #8]
 809 022a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 810 022c 002B     		cmp	r3, #0
 811 022e 00F0E380 		beq	.L53
 812              	.L32:
 136:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '%') goto out;
 813              		.loc 1 136 0
 814 0232 BB68     		ldr	r3, [r7, #8]
 815 0234 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 816 0236 252B     		cmp	r3, #37
 817 0238 00F0C980 		beq	.L54
 818              	.L34:
 137:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '-') {
 819              		.loc 1 137 0
 820 023c BB68     		ldr	r3, [r7, #8]
 821 023e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 822 0240 2D2B     		cmp	r3, #45
 823 0242 0DD1     		bne	.L55
 138:../3rdParty/printf/printf-stdarg.c **** 				++format;
 824              		.loc 1 138 0
 825 0244 BB68     		ldr	r3, [r7, #8]
 826 0246 03F10103 		add	r3, r3, #1
 827 024a BB60     		str	r3, [r7, #8]
 139:../3rdParty/printf/printf-stdarg.c **** 				pad = PAD_RIGHT;
 828              		.loc 1 139 0
 829 024c 4FF00106 		mov	r6, #1
 140:../3rdParty/printf/printf-stdarg.c **** 			}
 141:../3rdParty/printf/printf-stdarg.c **** 			while (*format == '0') {
 830              		.loc 1 141 0
 831 0250 07E0     		b	.L36
 832              	.L37:
 142:../3rdParty/printf/printf-stdarg.c **** 				++format;
 833              		.loc 1 142 0
 834 0252 BB68     		ldr	r3, [r7, #8]
 835 0254 03F10103 		add	r3, r3, #1
 836 0258 BB60     		str	r3, [r7, #8]
 143:../3rdParty/printf/printf-stdarg.c **** 				pad |= PAD_ZERO;
 837              		.loc 1 143 0
 838 025a 46F00206 		orr	r6, r6, #2
 839 025e 00E0     		b	.L36
 840              	.L55:
 841              		.loc 1 141 0
 842 0260 00BF     		nop
 843              	.L36:
 844 0262 BB68     		ldr	r3, [r7, #8]
 845 0264 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 846 0266 302B     		cmp	r3, #48
 847 0268 F3D0     		beq	.L37
 144:../3rdParty/printf/printf-stdarg.c **** 			}
 145:../3rdParty/printf/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 848              		.loc 1 145 0
 849 026a 0FE0     		b	.L38
 850              	.L40:
 146:../3rdParty/printf/printf-stdarg.c **** 				width *= 10;
 851              		.loc 1 146 0
 852 026c 2B46     		mov	r3, r5
 853 026e 4FEA8303 		lsl	r3, r3, #2
 854 0272 2B44     		add	r3, r3, r5
 855 0274 4FEA4303 		lsl	r3, r3, #1
 856 0278 1D46     		mov	r5, r3
 147:../3rdParty/printf/printf-stdarg.c **** 				width += *format - '0';
 857              		.loc 1 147 0
 858 027a BB68     		ldr	r3, [r7, #8]
 859 027c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 860 027e A3F13003 		sub	r3, r3, #48
 861 0282 1D44     		add	r5, r5, r3
 862              		.loc 1 145 0
 863 0284 BB68     		ldr	r3, [r7, #8]
 864 0286 03F10103 		add	r3, r3, #1
 865 028a BB60     		str	r3, [r7, #8]
 866              	.L38:
 867 028c BB68     		ldr	r3, [r7, #8]
 868 028e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 869 0290 2F2B     		cmp	r3, #47
 870 0292 03D9     		bls	.L39
 871 0294 BB68     		ldr	r3, [r7, #8]
 872 0296 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 873 0298 392B     		cmp	r3, #57
 874 029a E7D9     		bls	.L40
 875              	.L39:
 148:../3rdParty/printf/printf-stdarg.c **** 			}
 149:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 's' ) {
 876              		.loc 1 149 0
 877 029c BB68     		ldr	r3, [r7, #8]
 878 029e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 879 02a0 732B     		cmp	r3, #115
 880 02a2 17D1     		bne	.L41
 881              	.LBB3:
 150:../3rdParty/printf/printf-stdarg.c **** 				register char *s = (char *)va_arg( args, int );
 882              		.loc 1 150 0
 883 02a4 7B68     		ldr	r3, [r7, #4]
 884 02a6 03F10402 		add	r2, r3, #4
 885 02aa 7A60     		str	r2, [r7, #4]
 886 02ac 1B68     		ldr	r3, [r3, #0]
 887 02ae 9846     		mov	r8, r3
 151:../3rdParty/printf/printf-stdarg.c **** 				pc += prints (out, s?s:"(null)", width, pad);
 888              		.loc 1 151 0
 889 02b0 B8F1000F 		cmp	r8, #0
 890 02b4 01D0     		beq	.L42
 891 02b6 4346     		mov	r3, r8
 892 02b8 03E0     		b	.L43
 893              	.L42:
 894 02ba 40F20003 		movw	r3, #:lower16:.LC0
 895 02be C0F20003 		movt	r3, #:upper16:.LC0
 896              	.L43:
 897 02c2 F868     		ldr	r0, [r7, #12]
 898 02c4 1946     		mov	r1, r3
 899 02c6 2A46     		mov	r2, r5
 900 02c8 3346     		mov	r3, r6
 901 02ca FFF7B1FE 		bl	prints
 902 02ce 0346     		mov	r3, r0
 903 02d0 1C44     		add	r4, r4, r3
 152:../3rdParty/printf/printf-stdarg.c **** 				continue;
 904              		.loc 1 152 0
 905 02d2 87E0     		b	.L44
 906              	.L41:
 907              	.LBE3:
 153:../3rdParty/printf/printf-stdarg.c **** 			}
 154:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'd' ) {
 908              		.loc 1 154 0
 909 02d4 BB68     		ldr	r3, [r7, #8]
 910 02d6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 911 02d8 642B     		cmp	r3, #100
 912 02da 14D1     		bne	.L45
 155:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 1, width, pad, 'a');
 913              		.loc 1 155 0
 914 02dc 7B68     		ldr	r3, [r7, #4]
 915 02de 03F10402 		add	r2, r3, #4
 916 02e2 7A60     		str	r2, [r7, #4]
 917 02e4 1B68     		ldr	r3, [r3, #0]
 918 02e6 0095     		str	r5, [sp, #0]
 919 02e8 0196     		str	r6, [sp, #4]
 920 02ea 4FF06102 		mov	r2, #97
 921 02ee 0292     		str	r2, [sp, #8]
 922 02f0 F868     		ldr	r0, [r7, #12]
 923 02f2 1946     		mov	r1, r3
 924 02f4 4FF00A02 		mov	r2, #10
 925 02f8 4FF00103 		mov	r3, #1
 926 02fc FFF702FF 		bl	printi
 927 0300 0346     		mov	r3, r0
 928 0302 1C44     		add	r4, r4, r3
 156:../3rdParty/printf/printf-stdarg.c **** 				continue;
 929              		.loc 1 156 0
 930 0304 6EE0     		b	.L44
 931              	.L45:
 157:../3rdParty/printf/printf-stdarg.c **** 			}
 158:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'x' ) {
 932              		.loc 1 158 0
 933 0306 BB68     		ldr	r3, [r7, #8]
 934 0308 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 935 030a 782B     		cmp	r3, #120
 936 030c 14D1     		bne	.L46
 159:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'a');
 937              		.loc 1 159 0
 938 030e 7B68     		ldr	r3, [r7, #4]
 939 0310 03F10402 		add	r2, r3, #4
 940 0314 7A60     		str	r2, [r7, #4]
 941 0316 1B68     		ldr	r3, [r3, #0]
 942 0318 0095     		str	r5, [sp, #0]
 943 031a 0196     		str	r6, [sp, #4]
 944 031c 4FF06102 		mov	r2, #97
 945 0320 0292     		str	r2, [sp, #8]
 946 0322 F868     		ldr	r0, [r7, #12]
 947 0324 1946     		mov	r1, r3
 948 0326 4FF01002 		mov	r2, #16
 949 032a 4FF00003 		mov	r3, #0
 950 032e FFF7E9FE 		bl	printi
 951 0332 0346     		mov	r3, r0
 952 0334 1C44     		add	r4, r4, r3
 160:../3rdParty/printf/printf-stdarg.c **** 				continue;
 953              		.loc 1 160 0
 954 0336 55E0     		b	.L44
 955              	.L46:
 161:../3rdParty/printf/printf-stdarg.c **** 			}
 162:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'X' ) {
 956              		.loc 1 162 0
 957 0338 BB68     		ldr	r3, [r7, #8]
 958 033a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 959 033c 582B     		cmp	r3, #88
 960 033e 14D1     		bne	.L47
 163:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'A');
 961              		.loc 1 163 0
 962 0340 7B68     		ldr	r3, [r7, #4]
 963 0342 03F10402 		add	r2, r3, #4
 964 0346 7A60     		str	r2, [r7, #4]
 965 0348 1B68     		ldr	r3, [r3, #0]
 966 034a 0095     		str	r5, [sp, #0]
 967 034c 0196     		str	r6, [sp, #4]
 968 034e 4FF04102 		mov	r2, #65
 969 0352 0292     		str	r2, [sp, #8]
 970 0354 F868     		ldr	r0, [r7, #12]
 971 0356 1946     		mov	r1, r3
 972 0358 4FF01002 		mov	r2, #16
 973 035c 4FF00003 		mov	r3, #0
 974 0360 FFF7D0FE 		bl	printi
 975 0364 0346     		mov	r3, r0
 976 0366 1C44     		add	r4, r4, r3
 164:../3rdParty/printf/printf-stdarg.c **** 				continue;
 977              		.loc 1 164 0
 978 0368 3CE0     		b	.L44
 979              	.L47:
 165:../3rdParty/printf/printf-stdarg.c **** 			}
 166:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'u' ) {
 980              		.loc 1 166 0
 981 036a BB68     		ldr	r3, [r7, #8]
 982 036c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 983 036e 752B     		cmp	r3, #117
 984 0370 14D1     		bne	.L48
 167:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 0, width, pad, 'a');
 985              		.loc 1 167 0
 986 0372 7B68     		ldr	r3, [r7, #4]
 987 0374 03F10402 		add	r2, r3, #4
 988 0378 7A60     		str	r2, [r7, #4]
 989 037a 1B68     		ldr	r3, [r3, #0]
 990 037c 0095     		str	r5, [sp, #0]
 991 037e 0196     		str	r6, [sp, #4]
 992 0380 4FF06102 		mov	r2, #97
 993 0384 0292     		str	r2, [sp, #8]
 994 0386 F868     		ldr	r0, [r7, #12]
 995 0388 1946     		mov	r1, r3
 996 038a 4FF00A02 		mov	r2, #10
 997 038e 4FF00003 		mov	r3, #0
 998 0392 FFF7B7FE 		bl	printi
 999 0396 0346     		mov	r3, r0
 1000 0398 1C44     		add	r4, r4, r3
 168:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1001              		.loc 1 168 0
 1002 039a 23E0     		b	.L44
 1003              	.L48:
 169:../3rdParty/printf/printf-stdarg.c **** 			}
 170:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'c' ) {
 1004              		.loc 1 170 0
 1005 039c BB68     		ldr	r3, [r7, #8]
 1006 039e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1007 03a0 632B     		cmp	r3, #99
 1008 03a2 1ED1     		bne	.L56
 171:../3rdParty/printf/printf-stdarg.c **** 				/* char are converted to int then pushed on the stack */
 172:../3rdParty/printf/printf-stdarg.c **** 				scr[0] = (char)va_arg( args, int );
 1009              		.loc 1 172 0
 1010 03a4 7B68     		ldr	r3, [r7, #4]
 1011 03a6 03F10402 		add	r2, r3, #4
 1012 03aa 7A60     		str	r2, [r7, #4]
 1013 03ac 1B68     		ldr	r3, [r3, #0]
 1014 03ae DBB2     		uxtb	r3, r3
 1015 03b0 3B75     		strb	r3, [r7, #20]
 173:../3rdParty/printf/printf-stdarg.c **** 				scr[1] = '\0';
 1016              		.loc 1 173 0
 1017 03b2 4FF00003 		mov	r3, #0
 1018 03b6 7B75     		strb	r3, [r7, #21]
 174:../3rdParty/printf/printf-stdarg.c **** 				pc += prints (out, scr, width, pad);
 1019              		.loc 1 174 0
 1020 03b8 07F11403 		add	r3, r7, #20
 1021 03bc F868     		ldr	r0, [r7, #12]
 1022 03be 1946     		mov	r1, r3
 1023 03c0 2A46     		mov	r2, r5
 1024 03c2 3346     		mov	r3, r6
 1025 03c4 FFF734FE 		bl	prints
 1026 03c8 0346     		mov	r3, r0
 1027 03ca 1C44     		add	r4, r4, r3
 175:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1028              		.loc 1 175 0
 1029 03cc 0AE0     		b	.L44
 1030              	.L54:
 1031              		.loc 1 136 0
 1032 03ce 00BF     		nop
 1033              	.L31:
 176:../3rdParty/printf/printf-stdarg.c **** 			}
 177:../3rdParty/printf/printf-stdarg.c **** 		}
 178:../3rdParty/printf/printf-stdarg.c **** 		else {
 179:../3rdParty/printf/printf-stdarg.c **** 		out:
 180:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, *format);
 1034              		.loc 1 180 0
 1035 03d0 BB68     		ldr	r3, [r7, #8]
 1036 03d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1037 03d4 F868     		ldr	r0, [r7, #12]
 1038 03d6 1946     		mov	r1, r3
 1039 03d8 FFF712FE 		bl	printchar
 181:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 1040              		.loc 1 181 0
 1041 03dc 04F10104 		add	r4, r4, #1
 1042 03e0 00E0     		b	.L44
 1043              	.L56:
 1044              		.loc 1 175 0
 1045 03e2 00BF     		nop
 1046              	.L44:
 1047              		.loc 1 131 0
 1048 03e4 BB68     		ldr	r3, [r7, #8]
 1049 03e6 03F10103 		add	r3, r3, #1
 1050 03ea BB60     		str	r3, [r7, #8]
 1051              	.L30:
 1052 03ec BB68     		ldr	r3, [r7, #8]
 1053 03ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1054 03f0 002B     		cmp	r3, #0
 1055 03f2 7FF40DAF 		bne	.L50
 1056 03f6 00E0     		b	.L33
 1057              	.L53:
 1058              		.loc 1 135 0
 1059 03f8 00BF     		nop
 1060              	.L33:
 182:../3rdParty/printf/printf-stdarg.c **** 		}
 183:../3rdParty/printf/printf-stdarg.c **** 	}
 184:../3rdParty/printf/printf-stdarg.c **** 	if (out) **out = '\0';
 1061              		.loc 1 184 0
 1062 03fa FB68     		ldr	r3, [r7, #12]
 1063 03fc 002B     		cmp	r3, #0
 1064 03fe 04D0     		beq	.L51
 1065 0400 FB68     		ldr	r3, [r7, #12]
 1066 0402 1B68     		ldr	r3, [r3, #0]
 1067 0404 4FF00002 		mov	r2, #0
 1068 0408 1A70     		strb	r2, [r3, #0]
 1069              	.L51:
 185:../3rdParty/printf/printf-stdarg.c **** 	va_end( args );
 186:../3rdParty/printf/printf-stdarg.c **** 	return pc;
 1070              		.loc 1 186 0
 1071 040a 2346     		mov	r3, r4
 187:../3rdParty/printf/printf-stdarg.c **** }
 1072              		.loc 1 187 0
 1073 040c 1846     		mov	r0, r3
 1074 040e 07F11807 		add	r7, r7, #24
 1075 0412 BD46     		mov	sp, r7
 1076 0414 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1077              	.LFE3:
 1079              		.align	2
 1080              		.global	printf
 1081              		.thumb
 1082              		.thumb_func
 1084              	printf:
 1085              	.LFB4:
 188:../3rdParty/printf/printf-stdarg.c **** 
 189:../3rdParty/printf/printf-stdarg.c **** int printf(const char *format, ...)
 190:../3rdParty/printf/printf-stdarg.c **** {
 191:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 192:../3rdParty/printf/printf-stdarg.c ****         
 193:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1086              		.loc 1 193 0
 1087              		@ args = 4, pretend = 16, frame = 8
 1088              		@ frame_needed = 1, uses_anonymous_args = 1
 1089 0418 0FB4     		push	{r0, r1, r2, r3}
 1090              	.LCFI12:
 1091 041a 80B5     		push	{r7, lr}
 1092              	.LCFI13:
 1093 041c 82B0     		sub	sp, sp, #8
 1094              	.LCFI14:
 1095 041e 00AF     		add	r7, sp, #0
 1096              	.LCFI15:
 1097              		.loc 1 193 0
 1098 0420 07F11403 		add	r3, r7, #20
 1099 0424 7B60     		str	r3, [r7, #4]
 194:../3rdParty/printf/printf-stdarg.c ****         return print( 0, format, args );
 1100              		.loc 1 194 0
 1101 0426 4FF00000 		mov	r0, #0
 1102 042a 3969     		ldr	r1, [r7, #16]
 1103 042c 7A68     		ldr	r2, [r7, #4]
 1104 042e FFF7E5FE 		bl	print
 1105 0432 0346     		mov	r3, r0
 195:../3rdParty/printf/printf-stdarg.c **** }
 1106              		.loc 1 195 0
 1107 0434 1846     		mov	r0, r3
 1108 0436 07F10807 		add	r7, r7, #8
 1109 043a BD46     		mov	sp, r7
 1110 043c BDE88040 		pop	{r7, lr}
 1111 0440 04B0     		add	sp, sp, #16
 1112 0442 7047     		bx	lr
 1113              	.LFE4:
 1115              		.align	2
 1116              		.global	sprintf
 1117              		.thumb
 1118              		.thumb_func
 1120              	sprintf:
 1121              	.LFB5:
 196:../3rdParty/printf/printf-stdarg.c **** 
 197:../3rdParty/printf/printf-stdarg.c **** int sprintf(char *out, const char *format, ...)
 198:../3rdParty/printf/printf-stdarg.c **** {
 199:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 200:../3rdParty/printf/printf-stdarg.c ****         
 201:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1122              		.loc 1 201 0
 1123              		@ args = 4, pretend = 12, frame = 16
 1124              		@ frame_needed = 1, uses_anonymous_args = 1
 1125 0444 0EB4     		push	{r1, r2, r3}
 1126              	.LCFI16:
 1127 0446 80B5     		push	{r7, lr}
 1128              	.LCFI17:
 1129 0448 85B0     		sub	sp, sp, #20
 1130              	.LCFI18:
 1131 044a 00AF     		add	r7, sp, #0
 1132              	.LCFI19:
 1133 044c 7860     		str	r0, [r7, #4]
 1134              		.loc 1 201 0
 1135 044e 07F12003 		add	r3, r7, #32
 1136 0452 FB60     		str	r3, [r7, #12]
 202:../3rdParty/printf/printf-stdarg.c ****         return print( &out, format, args );
 1137              		.loc 1 202 0
 1138 0454 07F10403 		add	r3, r7, #4
 1139 0458 1846     		mov	r0, r3
 1140 045a F969     		ldr	r1, [r7, #28]
 1141 045c FA68     		ldr	r2, [r7, #12]
 1142 045e FFF7CDFE 		bl	print
 1143 0462 0346     		mov	r3, r0
 203:../3rdParty/printf/printf-stdarg.c **** }
 1144              		.loc 1 203 0
 1145 0464 1846     		mov	r0, r3
 1146 0466 07F11407 		add	r7, r7, #20
 1147 046a BD46     		mov	sp, r7
 1148 046c BDE88040 		pop	{r7, lr}
 1149 0470 03B0     		add	sp, sp, #12
 1150 0472 7047     		bx	lr
 1151              	.LFE5:
 1153              		.align	2
 1154              		.global	snprintf
 1155              		.thumb
 1156              		.thumb_func
 1158              	snprintf:
 1159              	.LFB6:
 204:../3rdParty/printf/printf-stdarg.c **** 
 205:../3rdParty/printf/printf-stdarg.c **** 
 206:../3rdParty/printf/printf-stdarg.c **** int snprintf( char *buf, unsigned int count, const char *format, ... )
 207:../3rdParty/printf/printf-stdarg.c **** {
 208:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 209:../3rdParty/printf/printf-stdarg.c ****         
 210:../3rdParty/printf/printf-stdarg.c ****         ( void ) count;
 211:../3rdParty/printf/printf-stdarg.c ****         
 212:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1160              		.loc 1 212 0
 1161              		@ args = 4, pretend = 8, frame = 16
 1162              		@ frame_needed = 1, uses_anonymous_args = 1
 1163 0474 0CB4     		push	{r2, r3}
 1164              	.LCFI20:
 1165 0476 80B5     		push	{r7, lr}
 1166              	.LCFI21:
 1167 0478 84B0     		sub	sp, sp, #16
 1168              	.LCFI22:
 1169 047a 00AF     		add	r7, sp, #0
 1170              	.LCFI23:
 1171 047c 7860     		str	r0, [r7, #4]
 1172 047e 3960     		str	r1, [r7, #0]
 1173              		.loc 1 212 0
 1174 0480 07F11C03 		add	r3, r7, #28
 1175 0484 FB60     		str	r3, [r7, #12]
 213:../3rdParty/printf/printf-stdarg.c ****         return print( &buf, format, args );
 1176              		.loc 1 213 0
 1177 0486 07F10403 		add	r3, r7, #4
 1178 048a 1846     		mov	r0, r3
 1179 048c B969     		ldr	r1, [r7, #24]
 1180 048e FA68     		ldr	r2, [r7, #12]
 1181 0490 FFF7B4FE 		bl	print
 1182 0494 0346     		mov	r3, r0
 214:../3rdParty/printf/printf-stdarg.c **** }
 1183              		.loc 1 214 0
 1184 0496 1846     		mov	r0, r3
 1185 0498 07F11007 		add	r7, r7, #16
 1186 049c BD46     		mov	sp, r7
 1187 049e BDE88040 		pop	{r7, lr}
 1188 04a2 02B0     		add	sp, sp, #8
 1189 04a4 7047     		bx	lr
 1190              	.LFE6:
 1192 04a6 00BF     		.align	2
 1193              		.global	write
 1194              		.thumb
 1195              		.thumb_func
 1197              	write:
 1198              	.LFB7:
 215:../3rdParty/printf/printf-stdarg.c **** 
 216:../3rdParty/printf/printf-stdarg.c **** 
 217:../3rdParty/printf/printf-stdarg.c **** #ifdef TEST_PRINTF
 218:../3rdParty/printf/printf-stdarg.c **** int main(void)
 219:../3rdParty/printf/printf-stdarg.c **** {
 220:../3rdParty/printf/printf-stdarg.c **** 	char *ptr = "Hello world!";
 221:../3rdParty/printf/printf-stdarg.c **** 	char *np = 0;
 222:../3rdParty/printf/printf-stdarg.c **** 	int i = 5;
 223:../3rdParty/printf/printf-stdarg.c **** 	unsigned int bs = sizeof(int)*8;
 224:../3rdParty/printf/printf-stdarg.c **** 	int mi;
 225:../3rdParty/printf/printf-stdarg.c **** 	char buf[80];
 226:../3rdParty/printf/printf-stdarg.c **** 
 227:../3rdParty/printf/printf-stdarg.c **** 	mi = (1 << (bs-1)) + 1;
 228:../3rdParty/printf/printf-stdarg.c **** 	printf("%s\n", ptr);
 229:../3rdParty/printf/printf-stdarg.c **** 	printf("printf test\n");
 230:../3rdParty/printf/printf-stdarg.c **** 	printf("%s is null pointer\n", np);
 231:../3rdParty/printf/printf-stdarg.c **** 	printf("%d = 5\n", i);
 232:../3rdParty/printf/printf-stdarg.c **** 	printf("%d = - max int\n", mi);
 233:../3rdParty/printf/printf-stdarg.c **** 	printf("char %c = 'a'\n", 'a');
 234:../3rdParty/printf/printf-stdarg.c **** 	printf("hex %x = ff\n", 0xff);
 235:../3rdParty/printf/printf-stdarg.c **** 	printf("hex %02x = 00\n", 0);
 236:../3rdParty/printf/printf-stdarg.c **** 	printf("signed %d = unsigned %u = hex %x\n", -3, -3, -3);
 237:../3rdParty/printf/printf-stdarg.c **** 	printf("%d %s(s)%", 0, "message");
 238:../3rdParty/printf/printf-stdarg.c **** 	printf("\n");
 239:../3rdParty/printf/printf-stdarg.c **** 	printf("%d %s(s) with %%\n", 0, "message");
 240:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "justif: \"%-10s\"\n", "left"); printf("%s", buf);
 241:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "justif: \"%10s\"\n", "right"); printf("%s", buf);
 242:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %04d zero padded\n", 3); printf("%s", buf);
 243:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %-4d left justif.\n", 3); printf("%s", buf);
 244:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %4d right justif.\n", 3); printf("%s", buf);
 245:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %04d zero padded\n", -3); printf("%s", buf);
 246:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %-4d left justif.\n", -3); printf("%s", buf);
 247:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %4d right justif.\n", -3); printf("%s", buf);
 248:../3rdParty/printf/printf-stdarg.c **** 
 249:../3rdParty/printf/printf-stdarg.c **** 	return 0;
 250:../3rdParty/printf/printf-stdarg.c **** }
 251:../3rdParty/printf/printf-stdarg.c **** 
 252:../3rdParty/printf/printf-stdarg.c **** /*
 253:../3rdParty/printf/printf-stdarg.c ****  * if you compile this file with
 254:../3rdParty/printf/printf-stdarg.c ****  *   gcc -Wall $(YOUR_C_OPTIONS) -DTEST_PRINTF -c printf.c
 255:../3rdParty/printf/printf-stdarg.c ****  * you will get a normal warning:
 256:../3rdParty/printf/printf-stdarg.c ****  *   printf.c:214: warning: spurious trailing `%' in format
 257:../3rdParty/printf/printf-stdarg.c ****  * this line is testing an invalid % at the end of the format string.
 258:../3rdParty/printf/printf-stdarg.c ****  *
 259:../3rdParty/printf/printf-stdarg.c ****  * this should display (on 32bit int machine) :
 260:../3rdParty/printf/printf-stdarg.c ****  *
 261:../3rdParty/printf/printf-stdarg.c ****  * Hello world!
 262:../3rdParty/printf/printf-stdarg.c ****  * printf test
 263:../3rdParty/printf/printf-stdarg.c ****  * (null) is null pointer
 264:../3rdParty/printf/printf-stdarg.c ****  * 5 = 5
 265:../3rdParty/printf/printf-stdarg.c ****  * -2147483647 = - max int
 266:../3rdParty/printf/printf-stdarg.c ****  * char a = 'a'
 267:../3rdParty/printf/printf-stdarg.c ****  * hex ff = ff
 268:../3rdParty/printf/printf-stdarg.c ****  * hex 00 = 00
 269:../3rdParty/printf/printf-stdarg.c ****  * signed -3 = unsigned 4294967293 = hex fffffffd
 270:../3rdParty/printf/printf-stdarg.c ****  * 0 message(s)
 271:../3rdParty/printf/printf-stdarg.c ****  * 0 message(s) with %
 272:../3rdParty/printf/printf-stdarg.c ****  * justif: "left      "
 273:../3rdParty/printf/printf-stdarg.c ****  * justif: "     right"
 274:../3rdParty/printf/printf-stdarg.c ****  *  3: 0003 zero padded
 275:../3rdParty/printf/printf-stdarg.c ****  *  3: 3    left justif.
 276:../3rdParty/printf/printf-stdarg.c ****  *  3:    3 right justif.
 277:../3rdParty/printf/printf-stdarg.c ****  * -3: -003 zero padded
 278:../3rdParty/printf/printf-stdarg.c ****  * -3: -3   left justif.
 279:../3rdParty/printf/printf-stdarg.c ****  * -3:   -3 right justif.
 280:../3rdParty/printf/printf-stdarg.c ****  */
 281:../3rdParty/printf/printf-stdarg.c **** 
 282:../3rdParty/printf/printf-stdarg.c **** #endif
 283:../3rdParty/printf/printf-stdarg.c **** 
 284:../3rdParty/printf/printf-stdarg.c **** 
 285:../3rdParty/printf/printf-stdarg.c **** /* To keep linker happy. */
 286:../3rdParty/printf/printf-stdarg.c **** int	write( int i, char* c, int n)
 287:../3rdParty/printf/printf-stdarg.c **** {
 1199              		.loc 1 287 0
 1200              		@ args = 0, pretend = 0, frame = 16
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 04a8 80B4     		push	{r7}
 1204              	.LCFI24:
 1205 04aa 85B0     		sub	sp, sp, #20
 1206              	.LCFI25:
 1207 04ac 00AF     		add	r7, sp, #0
 1208              	.LCFI26:
 1209 04ae F860     		str	r0, [r7, #12]
 1210 04b0 B960     		str	r1, [r7, #8]
 1211 04b2 7A60     		str	r2, [r7, #4]
 288:../3rdParty/printf/printf-stdarg.c **** 	(void)i;
 289:../3rdParty/printf/printf-stdarg.c **** 	(void)n;
 290:../3rdParty/printf/printf-stdarg.c **** 	(void)c;
 291:../3rdParty/printf/printf-stdarg.c **** 	return 0;
 1212              		.loc 1 291 0
 1213 04b4 4FF00003 		mov	r3, #0
 292:../3rdParty/printf/printf-stdarg.c **** }
 1214              		.loc 1 292 0
 1215 04b8 1846     		mov	r0, r3
 1216 04ba 07F11407 		add	r7, r7, #20
 1217 04be BD46     		mov	sp, r7
 1218 04c0 80BC     		pop	{r7}
 1219 04c2 7047     		bx	lr
 1220              	.LFE7:
 1519              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf-stdarg.c
/var/tmp//ccAQUqBL.s:452    .text:0000000000000000 $t
/var/tmp//ccAQUqBL.s:456    .text:0000000000000000 printchar
/var/tmp//ccAQUqBL.s:498    .text:0000000000000030 prints
/var/tmp//ccAQUqBL.s:629    .text:0000000000000104 printi
/var/tmp//ccAQUqBL.s:768    .rodata:0000000000000000 $d
/var/tmp//ccAQUqBL.s:769    .rodata:0000000000000000 .LC0
/var/tmp//ccAQUqBL.s:776    .text:00000000000001fc print
/var/tmp//ccAQUqBL.s:1084   .text:0000000000000418 printf
/var/tmp//ccAQUqBL.s:1120   .text:0000000000000444 sprintf
/var/tmp//ccAQUqBL.s:1158   .text:0000000000000474 snprintf
/var/tmp//ccAQUqBL.s:1197   .text:00000000000004a8 write
/var/tmp//ccAQUqBL.s:1235   .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
