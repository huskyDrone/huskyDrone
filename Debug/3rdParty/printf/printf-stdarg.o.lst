   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"printf-stdarg.c"
  23              	.Ltext0:
  24              		.file 1 "../3rdParty/printf/printf-stdarg.c"
 1047              		.align	2
 1048              		.thumb
 1049              		.thumb_func
 1051              	printchar:
 1052              	.LFB0:
   1:../3rdParty/printf/printf-stdarg.c **** /*
   2:../3rdParty/printf/printf-stdarg.c **** 	Copyright 2001, 2002 Georges Menie (www.menie.org)
   3:../3rdParty/printf/printf-stdarg.c **** 	stdarg version contributed by Christian Ettinger
   4:../3rdParty/printf/printf-stdarg.c **** 
   5:../3rdParty/printf/printf-stdarg.c ****     This program is free software; you can redistribute it and/or modify
   6:../3rdParty/printf/printf-stdarg.c ****     it under the terms of the GNU Lesser General Public License as published by
   7:../3rdParty/printf/printf-stdarg.c ****     the Free Software Foundation; either version 2 of the License, or
   8:../3rdParty/printf/printf-stdarg.c ****     (at your option) any later version.
   9:../3rdParty/printf/printf-stdarg.c **** 
  10:../3rdParty/printf/printf-stdarg.c ****     This program is distributed in the hope that it will be useful,
  11:../3rdParty/printf/printf-stdarg.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../3rdParty/printf/printf-stdarg.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:../3rdParty/printf/printf-stdarg.c ****     GNU Lesser General Public License for more details.
  14:../3rdParty/printf/printf-stdarg.c **** 
  15:../3rdParty/printf/printf-stdarg.c ****     You should have received a copy of the GNU Lesser General Public License
  16:../3rdParty/printf/printf-stdarg.c ****     along with this program; if not, write to the Free Software
  17:../3rdParty/printf/printf-stdarg.c ****     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  18:../3rdParty/printf/printf-stdarg.c **** */
  19:../3rdParty/printf/printf-stdarg.c **** 
  20:../3rdParty/printf/printf-stdarg.c **** /*
  21:../3rdParty/printf/printf-stdarg.c **** 	putchar is the only external dependency for this file,
  22:../3rdParty/printf/printf-stdarg.c **** 	if you have a working putchar, leave it commented out.
  23:../3rdParty/printf/printf-stdarg.c **** 	If not, uncomment the define below and
  24:../3rdParty/printf/printf-stdarg.c **** 	replace outbyte(c) by your own function call.
  25:../3rdParty/printf/printf-stdarg.c **** 
  26:../3rdParty/printf/printf-stdarg.c **** */
  27:../3rdParty/printf/printf-stdarg.c **** 
  28:../3rdParty/printf/printf-stdarg.c **** #define putchar(c) c
  29:../3rdParty/printf/printf-stdarg.c **** 
  30:../3rdParty/printf/printf-stdarg.c **** #include <stdarg.h>
  31:../3rdParty/printf/printf-stdarg.c **** 
  32:../3rdParty/printf/printf-stdarg.c **** static void printchar(char **str, int c)
  33:../3rdParty/printf/printf-stdarg.c **** {
 1053              		.loc 1 33 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0000 80B4     		push	{r7}
 1059              	.LCFI0:
 1060              		.cfi_def_cfa_offset 4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              	.LCFI1:
 1063              		.cfi_def_cfa_offset 16
 1064 0004 00AF     		add	r7, sp, #0
 1065              		.cfi_offset 7, -4
 1066              	.LCFI2:
 1067              		.cfi_def_cfa_register 7
 1068 0006 7860     		str	r0, [r7, #4]
 1069 0008 3960     		str	r1, [r7, #0]
  34:../3rdParty/printf/printf-stdarg.c **** 	//extern int putchar(int c);
  35:../3rdParty/printf/printf-stdarg.c **** 	
  36:../3rdParty/printf/printf-stdarg.c **** 	if (str) {
 1070              		.loc 1 36 0
 1071 000a 7B68     		ldr	r3, [r7, #4]
 1072 000c 002B     		cmp	r3, #0
 1073 000e 0AD0     		beq	.L1
  37:../3rdParty/printf/printf-stdarg.c **** 		**str = (char)c;
 1074              		.loc 1 37 0
 1075 0010 7B68     		ldr	r3, [r7, #4]
 1076 0012 1B68     		ldr	r3, [r3, #0]
 1077 0014 3A68     		ldr	r2, [r7, #0]
 1078 0016 D2B2     		uxtb	r2, r2
 1079 0018 1A70     		strb	r2, [r3, #0]
  38:../3rdParty/printf/printf-stdarg.c **** 		++(*str);
 1080              		.loc 1 38 0
 1081 001a 7B68     		ldr	r3, [r7, #4]
 1082 001c 1B68     		ldr	r3, [r3, #0]
 1083 001e 03F10102 		add	r2, r3, #1
 1084 0022 7B68     		ldr	r3, [r7, #4]
 1085 0024 1A60     		str	r2, [r3, #0]
 1086              	.L1:
  39:../3rdParty/printf/printf-stdarg.c **** 	}
  40:../3rdParty/printf/printf-stdarg.c **** 	else
  41:../3rdParty/printf/printf-stdarg.c **** 	{ 
  42:../3rdParty/printf/printf-stdarg.c **** 		(void)putchar(c);
  43:../3rdParty/printf/printf-stdarg.c **** 	}
  44:../3rdParty/printf/printf-stdarg.c **** }
 1087              		.loc 1 44 0
 1088 0026 07F10C07 		add	r7, r7, #12
 1089 002a BD46     		mov	sp, r7
 1090 002c 80BC     		pop	{r7}
 1091 002e 7047     		bx	lr
 1092              		.cfi_endproc
 1093              	.LFE0:
 1095              		.align	2
 1096              		.thumb
 1097              		.thumb_func
 1099              	prints:
 1100              	.LFB1:
  45:../3rdParty/printf/printf-stdarg.c **** 
  46:../3rdParty/printf/printf-stdarg.c **** #define PAD_RIGHT 1
  47:../3rdParty/printf/printf-stdarg.c **** #define PAD_ZERO 2
  48:../3rdParty/printf/printf-stdarg.c **** 
  49:../3rdParty/printf/printf-stdarg.c **** static int prints(char **out, const char *string, int width, int pad)
  50:../3rdParty/printf/printf-stdarg.c **** {
 1101              		.loc 1 50 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 16
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0030 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1106              	.LCFI3:
 1107              		.cfi_def_cfa_offset 24
 1108 0034 84B0     		sub	sp, sp, #16
 1109              	.LCFI4:
 1110              		.cfi_def_cfa_offset 40
 1111 0036 00AF     		add	r7, sp, #0
 1112              		.cfi_offset 14, -4
 1113              		.cfi_offset 8, -8
 1114              		.cfi_offset 7, -12
 1115              		.cfi_offset 6, -16
 1116              		.cfi_offset 5, -20
 1117              		.cfi_offset 4, -24
 1118              	.LCFI5:
 1119              		.cfi_def_cfa_register 7
 1120 0038 F860     		str	r0, [r7, #12]
 1121 003a B960     		str	r1, [r7, #8]
 1122 003c 7A60     		str	r2, [r7, #4]
 1123 003e 3B60     		str	r3, [r7, #0]
  51:../3rdParty/printf/printf-stdarg.c **** 	register int pc = 0, padchar = ' ';
 1124              		.loc 1 51 0
 1125 0040 4FF00004 		mov	r4, #0
 1126 0044 4FF02006 		mov	r6, #32
  52:../3rdParty/printf/printf-stdarg.c **** 
  53:../3rdParty/printf/printf-stdarg.c **** 	if (width > 0) {
 1127              		.loc 1 53 0
 1128 0048 7B68     		ldr	r3, [r7, #4]
 1129 004a 002B     		cmp	r3, #0
 1130 004c 1DDD     		ble	.L4
 1131              	.LBB2:
  54:../3rdParty/printf/printf-stdarg.c **** 		register int len = 0;
 1132              		.loc 1 54 0
 1133 004e 4FF00005 		mov	r5, #0
  55:../3rdParty/printf/printf-stdarg.c **** 		register const char *ptr;
  56:../3rdParty/printf/printf-stdarg.c **** 		for (ptr = string; *ptr; ++ptr) ++len;
 1134              		.loc 1 56 0
 1135 0052 D7F80880 		ldr	r8, [r7, #8]
 1136 0056 03E0     		b	.L5
 1137              	.L6:
 1138              		.loc 1 56 0 is_stmt 0 discriminator 2
 1139 0058 05F10105 		add	r5, r5, #1
 1140 005c 08F10108 		add	r8, r8, #1
 1141              	.L5:
 1142              		.loc 1 56 0 discriminator 1
 1143 0060 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 1144 0064 002B     		cmp	r3, #0
 1145 0066 F7D1     		bne	.L6
  57:../3rdParty/printf/printf-stdarg.c **** 		if (len >= width) width = 0;
 1146              		.loc 1 57 0 is_stmt 1
 1147 0068 7B68     		ldr	r3, [r7, #4]
 1148 006a 9D42     		cmp	r5, r3
 1149 006c 03DB     		blt	.L7
 1150              		.loc 1 57 0 is_stmt 0 discriminator 1
 1151 006e 4FF00003 		mov	r3, #0
 1152 0072 7B60     		str	r3, [r7, #4]
 1153 0074 02E0     		b	.L8
 1154              	.L7:
  58:../3rdParty/printf/printf-stdarg.c **** 		else width -= len;
 1155              		.loc 1 58 0 is_stmt 1
 1156 0076 7B68     		ldr	r3, [r7, #4]
 1157 0078 5B1B     		subs	r3, r3, r5
 1158 007a 7B60     		str	r3, [r7, #4]
 1159              	.L8:
  59:../3rdParty/printf/printf-stdarg.c **** 		if (pad & PAD_ZERO) padchar = '0';
 1160              		.loc 1 59 0
 1161 007c 3B68     		ldr	r3, [r7, #0]
 1162 007e 03F00203 		and	r3, r3, #2
 1163 0082 002B     		cmp	r3, #0
 1164 0084 01D0     		beq	.L4
 1165              		.loc 1 59 0 is_stmt 0 discriminator 1
 1166 0086 4FF03006 		mov	r6, #48
 1167              	.L4:
 1168              	.LBE2:
  60:../3rdParty/printf/printf-stdarg.c **** 	}
  61:../3rdParty/printf/printf-stdarg.c **** 	if (!(pad & PAD_RIGHT)) {
 1169              		.loc 1 61 0 is_stmt 1
 1170 008a 3B68     		ldr	r3, [r7, #0]
 1171 008c 03F00103 		and	r3, r3, #1
 1172 0090 002B     		cmp	r3, #0
 1173 0092 1BD1     		bne	.L16
  62:../3rdParty/printf/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 1174              		.loc 1 62 0
 1175 0094 09E0     		b	.L10
 1176              	.L11:
  63:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, padchar);
 1177              		.loc 1 63 0 discriminator 2
 1178 0096 F868     		ldr	r0, [r7, #12]
 1179 0098 3146     		mov	r1, r6
 1180 009a FFF7B1FF 		bl	printchar
  64:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 1181              		.loc 1 64 0 discriminator 2
 1182 009e 04F10104 		add	r4, r4, #1
  62:../3rdParty/printf/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 1183              		.loc 1 62 0 discriminator 2
 1184 00a2 7B68     		ldr	r3, [r7, #4]
 1185 00a4 03F1FF33 		add	r3, r3, #-1
 1186 00a8 7B60     		str	r3, [r7, #4]
 1187              	.L10:
  62:../3rdParty/printf/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 1188              		.loc 1 62 0 is_stmt 0 discriminator 1
 1189 00aa 7B68     		ldr	r3, [r7, #4]
 1190 00ac 002B     		cmp	r3, #0
 1191 00ae F2DC     		bgt	.L11
  65:../3rdParty/printf/printf-stdarg.c **** 		}
  66:../3rdParty/printf/printf-stdarg.c **** 	}
  67:../3rdParty/printf/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 1192              		.loc 1 67 0 is_stmt 1
 1193 00b0 0DE0     		b	.L12
 1194              	.L13:
  68:../3rdParty/printf/printf-stdarg.c **** 		printchar (out, *string);
 1195              		.loc 1 68 0 discriminator 2
 1196 00b2 BB68     		ldr	r3, [r7, #8]
 1197 00b4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1198 00b6 F868     		ldr	r0, [r7, #12]
 1199 00b8 1946     		mov	r1, r3
 1200 00ba FFF7A1FF 		bl	printchar
  69:../3rdParty/printf/printf-stdarg.c **** 		++pc;
 1201              		.loc 1 69 0 discriminator 2
 1202 00be 04F10104 		add	r4, r4, #1
  67:../3rdParty/printf/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 1203              		.loc 1 67 0 discriminator 2
 1204 00c2 BB68     		ldr	r3, [r7, #8]
 1205 00c4 03F10103 		add	r3, r3, #1
 1206 00c8 BB60     		str	r3, [r7, #8]
 1207 00ca 00E0     		b	.L12
 1208              	.L16:
  67:../3rdParty/printf/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 1209              		.loc 1 67 0 is_stmt 0
 1210 00cc 00BF     		nop
 1211              	.L12:
  67:../3rdParty/printf/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 1212              		.loc 1 67 0 discriminator 1
 1213 00ce BB68     		ldr	r3, [r7, #8]
 1214 00d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1215 00d2 002B     		cmp	r3, #0
 1216 00d4 EDD1     		bne	.L13
  70:../3rdParty/printf/printf-stdarg.c **** 	}
  71:../3rdParty/printf/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 1217              		.loc 1 71 0 is_stmt 1
 1218 00d6 09E0     		b	.L14
 1219              	.L15:
  72:../3rdParty/printf/printf-stdarg.c **** 		printchar (out, padchar);
 1220              		.loc 1 72 0 discriminator 2
 1221 00d8 F868     		ldr	r0, [r7, #12]
 1222 00da 3146     		mov	r1, r6
 1223 00dc FFF790FF 		bl	printchar
  73:../3rdParty/printf/printf-stdarg.c **** 		++pc;
 1224              		.loc 1 73 0 discriminator 2
 1225 00e0 04F10104 		add	r4, r4, #1
  71:../3rdParty/printf/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 1226              		.loc 1 71 0 discriminator 2
 1227 00e4 7B68     		ldr	r3, [r7, #4]
 1228 00e6 03F1FF33 		add	r3, r3, #-1
 1229 00ea 7B60     		str	r3, [r7, #4]
 1230              	.L14:
  71:../3rdParty/printf/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 1231              		.loc 1 71 0 is_stmt 0 discriminator 1
 1232 00ec 7B68     		ldr	r3, [r7, #4]
 1233 00ee 002B     		cmp	r3, #0
 1234 00f0 F2DC     		bgt	.L15
  74:../3rdParty/printf/printf-stdarg.c **** 	}
  75:../3rdParty/printf/printf-stdarg.c **** 
  76:../3rdParty/printf/printf-stdarg.c **** 	return pc;
 1235              		.loc 1 76 0 is_stmt 1
 1236 00f2 2346     		mov	r3, r4
  77:../3rdParty/printf/printf-stdarg.c **** }
 1237              		.loc 1 77 0
 1238 00f4 1846     		mov	r0, r3
 1239 00f6 07F11007 		add	r7, r7, #16
 1240 00fa BD46     		mov	sp, r7
 1241 00fc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1242              		.cfi_endproc
 1243              	.LFE1:
 1245              		.align	2
 1246              		.thumb
 1247              		.thumb_func
 1249              	printi:
 1250              	.LFB2:
  78:../3rdParty/printf/printf-stdarg.c **** 
  79:../3rdParty/printf/printf-stdarg.c **** /* the following should be enough for 32 bit int */
  80:../3rdParty/printf/printf-stdarg.c **** #define PRINT_BUF_LEN 12
  81:../3rdParty/printf/printf-stdarg.c **** 
  82:../3rdParty/printf/printf-stdarg.c **** static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
  83:../3rdParty/printf/printf-stdarg.c **** {
 1251              		.loc 1 83 0
 1252              		.cfi_startproc
 1253              		@ args = 12, pretend = 0, frame = 32
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0100 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1256              	.LCFI6:
 1257              		.cfi_def_cfa_offset 28
 1258 0104 89B0     		sub	sp, sp, #36
 1259              	.LCFI7:
 1260              		.cfi_def_cfa_offset 64
 1261 0106 00AF     		add	r7, sp, #0
 1262              		.cfi_offset 14, -4
 1263              		.cfi_offset 9, -8
 1264              		.cfi_offset 8, -12
 1265              		.cfi_offset 7, -16
 1266              		.cfi_offset 6, -20
 1267              		.cfi_offset 5, -24
 1268              		.cfi_offset 4, -28
 1269              	.LCFI8:
 1270              		.cfi_def_cfa_register 7
 1271 0108 F860     		str	r0, [r7, #12]
 1272 010a B960     		str	r1, [r7, #8]
 1273 010c 7A60     		str	r2, [r7, #4]
 1274 010e 3B60     		str	r3, [r7, #0]
  84:../3rdParty/printf/printf-stdarg.c **** 	char print_buf[PRINT_BUF_LEN];
  85:../3rdParty/printf/printf-stdarg.c **** 	register char *s;
  86:../3rdParty/printf/printf-stdarg.c **** 	register int t, neg = 0, pc = 0;
 1275              		.loc 1 86 0
 1276 0110 4FF00009 		mov	r9, #0
 1277 0114 4FF00008 		mov	r8, #0
  87:../3rdParty/printf/printf-stdarg.c **** 	register unsigned int u = (unsigned int)i;
 1278              		.loc 1 87 0
 1279 0118 BD68     		ldr	r5, [r7, #8]
  88:../3rdParty/printf/printf-stdarg.c **** 
  89:../3rdParty/printf/printf-stdarg.c **** 	if (i == 0) {
 1280              		.loc 1 89 0
 1281 011a BB68     		ldr	r3, [r7, #8]
 1282 011c 002B     		cmp	r3, #0
 1283 011e 0FD1     		bne	.L18
  90:../3rdParty/printf/printf-stdarg.c **** 		print_buf[0] = '0';
 1284              		.loc 1 90 0
 1285 0120 4FF03003 		mov	r3, #48
 1286 0124 3B75     		strb	r3, [r7, #20]
  91:../3rdParty/printf/printf-stdarg.c **** 		print_buf[1] = '\0';
 1287              		.loc 1 91 0
 1288 0126 4FF00003 		mov	r3, #0
 1289 012a 7B75     		strb	r3, [r7, #21]
  92:../3rdParty/printf/printf-stdarg.c **** 		return prints (out, print_buf, width, pad);
 1290              		.loc 1 92 0
 1291 012c 07F11403 		add	r3, r7, #20
 1292 0130 F868     		ldr	r0, [r7, #12]
 1293 0132 1946     		mov	r1, r3
 1294 0134 3A6C     		ldr	r2, [r7, #64]
 1295 0136 7B6C     		ldr	r3, [r7, #68]
 1296 0138 FFF77AFF 		bl	prints
 1297 013c 0346     		mov	r3, r0
 1298 013e 53E0     		b	.L19
 1299              	.L18:
  93:../3rdParty/printf/printf-stdarg.c **** 	}
  94:../3rdParty/printf/printf-stdarg.c **** 
  95:../3rdParty/printf/printf-stdarg.c **** 	if (sg && b == 10 && i < 0) {
 1300              		.loc 1 95 0
 1301 0140 3B68     		ldr	r3, [r7, #0]
 1302 0142 002B     		cmp	r3, #0
 1303 0144 0BD0     		beq	.L20
 1304              		.loc 1 95 0 is_stmt 0 discriminator 1
 1305 0146 7B68     		ldr	r3, [r7, #4]
 1306 0148 0A2B     		cmp	r3, #10
 1307 014a 08D1     		bne	.L20
 1308 014c BB68     		ldr	r3, [r7, #8]
 1309 014e 002B     		cmp	r3, #0
 1310 0150 05DA     		bge	.L20
  96:../3rdParty/printf/printf-stdarg.c **** 		neg = 1;
 1311              		.loc 1 96 0 is_stmt 1
 1312 0152 4FF00109 		mov	r9, #1
  97:../3rdParty/printf/printf-stdarg.c **** 		u = (unsigned int)-i;
 1313              		.loc 1 97 0
 1314 0156 BB68     		ldr	r3, [r7, #8]
 1315 0158 C3F10003 		rsb	r3, r3, #0
 1316 015c 1D46     		mov	r5, r3
 1317              	.L20:
  98:../3rdParty/printf/printf-stdarg.c **** 	}
  99:../3rdParty/printf/printf-stdarg.c **** 
 100:../3rdParty/printf/printf-stdarg.c **** 	s = print_buf + PRINT_BUF_LEN-1;
 1318              		.loc 1 100 0
 1319 015e 07F11403 		add	r3, r7, #20
 1320 0162 03F10B04 		add	r4, r3, #11
 101:../3rdParty/printf/printf-stdarg.c **** 	*s = '\0';
 1321              		.loc 1 101 0
 1322 0166 4FF00003 		mov	r3, #0
 1323 016a 2370     		strb	r3, [r4, #0]
 102:../3rdParty/printf/printf-stdarg.c **** 
 103:../3rdParty/printf/printf-stdarg.c **** 	while (u) {
 1324              		.loc 1 103 0
 1325 016c 16E0     		b	.L21
 1326              	.L23:
 104:../3rdParty/printf/printf-stdarg.c **** 		t = (unsigned int)u % b;
 1327              		.loc 1 104 0
 1328 016e 7B68     		ldr	r3, [r7, #4]
 1329 0170 B5FBF3F2 		udiv	r2, r5, r3
 1330 0174 03FB02F3 		mul	r3, r3, r2
 1331 0178 EB1A     		subs	r3, r5, r3
 1332 017a 1E46     		mov	r6, r3
 105:../3rdParty/printf/printf-stdarg.c **** 		if( t >= 10 )
 1333              		.loc 1 105 0
 1334 017c 092E     		cmp	r6, #9
 1335 017e 03DD     		ble	.L22
 106:../3rdParty/printf/printf-stdarg.c **** 			t += letbase - '0' - 10;
 1336              		.loc 1 106 0
 1337 0180 BB6C     		ldr	r3, [r7, #72]
 1338 0182 A3F13A03 		sub	r3, r3, #58
 1339 0186 F618     		adds	r6, r6, r3
 1340              	.L22:
 107:../3rdParty/printf/printf-stdarg.c **** 		*--s = (char)(t + '0');
 1341              		.loc 1 107 0
 1342 0188 04F1FF34 		add	r4, r4, #-1
 1343 018c F3B2     		uxtb	r3, r6
 1344 018e 03F13003 		add	r3, r3, #48
 1345 0192 DBB2     		uxtb	r3, r3
 1346 0194 2370     		strb	r3, [r4, #0]
 108:../3rdParty/printf/printf-stdarg.c **** 		u /= b;
 1347              		.loc 1 108 0
 1348 0196 7B68     		ldr	r3, [r7, #4]
 1349 0198 B5FBF3F5 		udiv	r5, r5, r3
 1350              	.L21:
 103:../3rdParty/printf/printf-stdarg.c **** 	while (u) {
 1351              		.loc 1 103 0 discriminator 1
 1352 019c 002D     		cmp	r5, #0
 1353 019e E6D1     		bne	.L23
 109:../3rdParty/printf/printf-stdarg.c **** 	}
 110:../3rdParty/printf/printf-stdarg.c **** 
 111:../3rdParty/printf/printf-stdarg.c **** 	if (neg) {
 1354              		.loc 1 111 0
 1355 01a0 B9F1000F 		cmp	r9, #0
 1356 01a4 18D0     		beq	.L24
 112:../3rdParty/printf/printf-stdarg.c **** 		if( width && (pad & PAD_ZERO) ) {
 1357              		.loc 1 112 0
 1358 01a6 3B6C     		ldr	r3, [r7, #64]
 1359 01a8 002B     		cmp	r3, #0
 1360 01aa 10D0     		beq	.L25
 1361              		.loc 1 112 0 is_stmt 0 discriminator 1
 1362 01ac 7B6C     		ldr	r3, [r7, #68]
 1363 01ae 03F00203 		and	r3, r3, #2
 1364 01b2 002B     		cmp	r3, #0
 1365 01b4 0BD0     		beq	.L25
 113:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, '-');
 1366              		.loc 1 113 0 is_stmt 1
 1367 01b6 F868     		ldr	r0, [r7, #12]
 1368 01b8 4FF02D01 		mov	r1, #45
 1369 01bc FFF720FF 		bl	printchar
 114:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 1370              		.loc 1 114 0
 1371 01c0 08F10108 		add	r8, r8, #1
 115:../3rdParty/printf/printf-stdarg.c **** 			--width;
 1372              		.loc 1 115 0
 1373 01c4 3B6C     		ldr	r3, [r7, #64]
 1374 01c6 03F1FF33 		add	r3, r3, #-1
 1375 01ca 3B64     		str	r3, [r7, #64]
 1376 01cc 04E0     		b	.L24
 1377              	.L25:
 116:../3rdParty/printf/printf-stdarg.c **** 		}
 117:../3rdParty/printf/printf-stdarg.c **** 		else {
 118:../3rdParty/printf/printf-stdarg.c **** 			*--s = '-';
 1378              		.loc 1 118 0
 1379 01ce 04F1FF34 		add	r4, r4, #-1
 1380 01d2 4FF02D03 		mov	r3, #45
 1381 01d6 2370     		strb	r3, [r4, #0]
 1382              	.L24:
 119:../3rdParty/printf/printf-stdarg.c **** 		}
 120:../3rdParty/printf/printf-stdarg.c **** 	}
 121:../3rdParty/printf/printf-stdarg.c **** 
 122:../3rdParty/printf/printf-stdarg.c **** 	return pc + prints (out, s, width, pad);
 1383              		.loc 1 122 0
 1384 01d8 F868     		ldr	r0, [r7, #12]
 1385 01da 2146     		mov	r1, r4
 1386 01dc 3A6C     		ldr	r2, [r7, #64]
 1387 01de 7B6C     		ldr	r3, [r7, #68]
 1388 01e0 FFF726FF 		bl	prints
 1389 01e4 0346     		mov	r3, r0
 1390 01e6 4344     		add	r3, r3, r8
 1391              	.L19:
 123:../3rdParty/printf/printf-stdarg.c **** }
 1392              		.loc 1 123 0
 1393 01e8 1846     		mov	r0, r3
 1394 01ea 07F12407 		add	r7, r7, #36
 1395 01ee BD46     		mov	sp, r7
 1396 01f0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1397              		.cfi_endproc
 1398              	.LFE2:
 1400              		.section	.rodata
 1401              		.align	2
 1402              	.LC0:
 1403 0000 286E756C 		.ascii	"(null)\000"
 1403      6C2900
 1404 0007 00       		.text
 1405              		.align	2
 1406              		.thumb
 1407              		.thumb_func
 1409              	print:
 1410              	.LFB3:
 124:../3rdParty/printf/printf-stdarg.c **** 
 125:../3rdParty/printf/printf-stdarg.c **** static int print( char **out, const char *format, va_list args )
 126:../3rdParty/printf/printf-stdarg.c **** {
 1411              		.loc 1 126 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 24
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 01f4 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1416              	.LCFI9:
 1417              		.cfi_def_cfa_offset 24
 1418 01f8 8AB0     		sub	sp, sp, #40
 1419              	.LCFI10:
 1420              		.cfi_def_cfa_offset 64
 1421 01fa 04AF     		add	r7, sp, #16
 1422              		.cfi_offset 14, -4
 1423              		.cfi_offset 8, -8
 1424              		.cfi_offset 7, -12
 1425              		.cfi_offset 6, -16
 1426              		.cfi_offset 5, -20
 1427              		.cfi_offset 4, -24
 1428              	.LCFI11:
 1429              		.cfi_def_cfa 7, 48
 1430 01fc F860     		str	r0, [r7, #12]
 1431 01fe B960     		str	r1, [r7, #8]
 1432 0200 7A60     		str	r2, [r7, #4]
 127:../3rdParty/printf/printf-stdarg.c **** 	register int width, pad;
 128:../3rdParty/printf/printf-stdarg.c **** 	register int pc = 0;
 1433              		.loc 1 128 0
 1434 0202 4FF00004 		mov	r4, #0
 129:../3rdParty/printf/printf-stdarg.c **** 	char scr[2];
 130:../3rdParty/printf/printf-stdarg.c **** 
 131:../3rdParty/printf/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 1435              		.loc 1 131 0
 1436 0206 E8E0     		b	.L27
 1437              	.L46:
 132:../3rdParty/printf/printf-stdarg.c **** 		if (*format == '%') {
 1438              		.loc 1 132 0
 1439 0208 BB68     		ldr	r3, [r7, #8]
 1440 020a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1441 020c 252B     		cmp	r3, #37
 1442 020e 40F0D880 		bne	.L28
 133:../3rdParty/printf/printf-stdarg.c **** 			++format;
 1443              		.loc 1 133 0
 1444 0212 BB68     		ldr	r3, [r7, #8]
 1445 0214 03F10103 		add	r3, r3, #1
 1446 0218 BB60     		str	r3, [r7, #8]
 134:../3rdParty/printf/printf-stdarg.c **** 			width = pad = 0;
 1447              		.loc 1 134 0
 1448 021a 4FF00006 		mov	r6, #0
 1449 021e 3546     		mov	r5, r6
 135:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '\0') break;
 1450              		.loc 1 135 0
 1451 0220 BB68     		ldr	r3, [r7, #8]
 1452 0222 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1453 0224 002B     		cmp	r3, #0
 1454 0226 00F0DE80 		beq	.L48
 1455              	.L29:
 136:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '%') goto out;
 1456              		.loc 1 136 0
 1457 022a BB68     		ldr	r3, [r7, #8]
 1458 022c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1459 022e 252B     		cmp	r3, #37
 1460 0230 00F0C680 		beq	.L49
 1461              	.L31:
 137:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '-') {
 1462              		.loc 1 137 0
 1463 0234 BB68     		ldr	r3, [r7, #8]
 1464 0236 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1465 0238 2D2B     		cmp	r3, #45
 1466 023a 0DD1     		bne	.L50
 138:../3rdParty/printf/printf-stdarg.c **** 				++format;
 1467              		.loc 1 138 0
 1468 023c BB68     		ldr	r3, [r7, #8]
 1469 023e 03F10103 		add	r3, r3, #1
 1470 0242 BB60     		str	r3, [r7, #8]
 139:../3rdParty/printf/printf-stdarg.c **** 				pad = PAD_RIGHT;
 1471              		.loc 1 139 0
 1472 0244 4FF00106 		mov	r6, #1
 140:../3rdParty/printf/printf-stdarg.c **** 			}
 141:../3rdParty/printf/printf-stdarg.c **** 			while (*format == '0') {
 1473              		.loc 1 141 0
 1474 0248 07E0     		b	.L33
 1475              	.L34:
 142:../3rdParty/printf/printf-stdarg.c **** 				++format;
 1476              		.loc 1 142 0
 1477 024a BB68     		ldr	r3, [r7, #8]
 1478 024c 03F10103 		add	r3, r3, #1
 1479 0250 BB60     		str	r3, [r7, #8]
 143:../3rdParty/printf/printf-stdarg.c **** 				pad |= PAD_ZERO;
 1480              		.loc 1 143 0
 1481 0252 46F00206 		orr	r6, r6, #2
 1482 0256 00E0     		b	.L33
 1483              	.L50:
 141:../3rdParty/printf/printf-stdarg.c **** 			while (*format == '0') {
 1484              		.loc 1 141 0
 1485 0258 00BF     		nop
 1486              	.L33:
 141:../3rdParty/printf/printf-stdarg.c **** 			while (*format == '0') {
 1487              		.loc 1 141 0 is_stmt 0 discriminator 1
 1488 025a BB68     		ldr	r3, [r7, #8]
 1489 025c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1490 025e 302B     		cmp	r3, #48
 1491 0260 F3D0     		beq	.L34
 144:../3rdParty/printf/printf-stdarg.c **** 			}
 145:../3rdParty/printf/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 1492              		.loc 1 145 0 is_stmt 1
 1493 0262 0FE0     		b	.L35
 1494              	.L37:
 146:../3rdParty/printf/printf-stdarg.c **** 				width *= 10;
 1495              		.loc 1 146 0 discriminator 1
 1496 0264 2B46     		mov	r3, r5
 1497 0266 4FEA8303 		lsl	r3, r3, #2
 1498 026a 5B19     		adds	r3, r3, r5
 1499 026c 4FEA4303 		lsl	r3, r3, #1
 1500 0270 1D46     		mov	r5, r3
 147:../3rdParty/printf/printf-stdarg.c **** 				width += *format - '0';
 1501              		.loc 1 147 0 discriminator 1
 1502 0272 BB68     		ldr	r3, [r7, #8]
 1503 0274 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1504 0276 A3F13003 		sub	r3, r3, #48
 1505 027a ED18     		adds	r5, r5, r3
 145:../3rdParty/printf/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 1506              		.loc 1 145 0 discriminator 1
 1507 027c BB68     		ldr	r3, [r7, #8]
 1508 027e 03F10103 		add	r3, r3, #1
 1509 0282 BB60     		str	r3, [r7, #8]
 1510              	.L35:
 1511 0284 BB68     		ldr	r3, [r7, #8]
 1512 0286 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1513 0288 2F2B     		cmp	r3, #47
 1514 028a 03D9     		bls	.L36
 145:../3rdParty/printf/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 1515              		.loc 1 145 0 is_stmt 0 discriminator 2
 1516 028c BB68     		ldr	r3, [r7, #8]
 1517 028e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1518 0290 392B     		cmp	r3, #57
 1519 0292 E7D9     		bls	.L37
 1520              	.L36:
 148:../3rdParty/printf/printf-stdarg.c **** 			}
 149:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 's' ) {
 1521              		.loc 1 149 0 is_stmt 1
 1522 0294 BB68     		ldr	r3, [r7, #8]
 1523 0296 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1524 0298 732B     		cmp	r3, #115
 1525 029a 14D1     		bne	.L38
 1526              	.LBB3:
 150:../3rdParty/printf/printf-stdarg.c **** 				register char *s = (char *)va_arg( args, int );
 1527              		.loc 1 150 0
 1528 029c 7B68     		ldr	r3, [r7, #4]
 1529 029e 03F10402 		add	r2, r3, #4
 1530 02a2 7A60     		str	r2, [r7, #4]
 1531 02a4 1B68     		ldr	r3, [r3, #0]
 1532 02a6 9846     		mov	r8, r3
 151:../3rdParty/printf/printf-stdarg.c **** 				pc += prints (out, s?s:"(null)", width, pad);
 1533              		.loc 1 151 0
 1534 02a8 B8F1000F 		cmp	r8, #0
 1535 02ac 01D0     		beq	.L39
 1536              		.loc 1 151 0 is_stmt 0 discriminator 1
 1537 02ae 4346     		mov	r3, r8
 1538 02b0 00E0     		b	.L40
 1539              	.L39:
 1540              		.loc 1 151 0 discriminator 2
 1541 02b2 554B     		ldr	r3, .L51
 1542              	.L40:
 1543              		.loc 1 151 0 discriminator 3
 1544 02b4 F868     		ldr	r0, [r7, #12]
 1545 02b6 1946     		mov	r1, r3
 1546 02b8 2A46     		mov	r2, r5
 1547 02ba 3346     		mov	r3, r6
 1548 02bc FFF7B8FE 		bl	prints
 1549 02c0 0346     		mov	r3, r0
 1550 02c2 E418     		adds	r4, r4, r3
 152:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1551              		.loc 1 152 0 is_stmt 1 discriminator 3
 1552 02c4 85E0     		b	.L41
 1553              	.L38:
 1554              	.LBE3:
 153:../3rdParty/printf/printf-stdarg.c **** 			}
 154:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'd' ) {
 1555              		.loc 1 154 0
 1556 02c6 BB68     		ldr	r3, [r7, #8]
 1557 02c8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1558 02ca 642B     		cmp	r3, #100
 1559 02cc 14D1     		bne	.L42
 155:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 1, width, pad, 'a');
 1560              		.loc 1 155 0
 1561 02ce 7B68     		ldr	r3, [r7, #4]
 1562 02d0 03F10402 		add	r2, r3, #4
 1563 02d4 7A60     		str	r2, [r7, #4]
 1564 02d6 1B68     		ldr	r3, [r3, #0]
 1565 02d8 0095     		str	r5, [sp, #0]
 1566 02da 0196     		str	r6, [sp, #4]
 1567 02dc 4FF06102 		mov	r2, #97
 1568 02e0 0292     		str	r2, [sp, #8]
 1569 02e2 F868     		ldr	r0, [r7, #12]
 1570 02e4 1946     		mov	r1, r3
 1571 02e6 4FF00A02 		mov	r2, #10
 1572 02ea 4FF00103 		mov	r3, #1
 1573 02ee FFF707FF 		bl	printi
 1574 02f2 0346     		mov	r3, r0
 1575 02f4 E418     		adds	r4, r4, r3
 156:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1576              		.loc 1 156 0
 1577 02f6 6CE0     		b	.L41
 1578              	.L42:
 157:../3rdParty/printf/printf-stdarg.c **** 			}
 158:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'x' ) {
 1579              		.loc 1 158 0
 1580 02f8 BB68     		ldr	r3, [r7, #8]
 1581 02fa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1582 02fc 782B     		cmp	r3, #120
 1583 02fe 14D1     		bne	.L43
 159:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'a');
 1584              		.loc 1 159 0
 1585 0300 7B68     		ldr	r3, [r7, #4]
 1586 0302 03F10402 		add	r2, r3, #4
 1587 0306 7A60     		str	r2, [r7, #4]
 1588 0308 1B68     		ldr	r3, [r3, #0]
 1589 030a 0095     		str	r5, [sp, #0]
 1590 030c 0196     		str	r6, [sp, #4]
 1591 030e 4FF06102 		mov	r2, #97
 1592 0312 0292     		str	r2, [sp, #8]
 1593 0314 F868     		ldr	r0, [r7, #12]
 1594 0316 1946     		mov	r1, r3
 1595 0318 4FF01002 		mov	r2, #16
 1596 031c 4FF00003 		mov	r3, #0
 1597 0320 FFF7EEFE 		bl	printi
 1598 0324 0346     		mov	r3, r0
 1599 0326 E418     		adds	r4, r4, r3
 160:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1600              		.loc 1 160 0
 1601 0328 53E0     		b	.L41
 1602              	.L43:
 161:../3rdParty/printf/printf-stdarg.c **** 			}
 162:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'X' ) {
 1603              		.loc 1 162 0
 1604 032a BB68     		ldr	r3, [r7, #8]
 1605 032c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1606 032e 582B     		cmp	r3, #88
 1607 0330 14D1     		bne	.L44
 163:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'A');
 1608              		.loc 1 163 0
 1609 0332 7B68     		ldr	r3, [r7, #4]
 1610 0334 03F10402 		add	r2, r3, #4
 1611 0338 7A60     		str	r2, [r7, #4]
 1612 033a 1B68     		ldr	r3, [r3, #0]
 1613 033c 0095     		str	r5, [sp, #0]
 1614 033e 0196     		str	r6, [sp, #4]
 1615 0340 4FF04102 		mov	r2, #65
 1616 0344 0292     		str	r2, [sp, #8]
 1617 0346 F868     		ldr	r0, [r7, #12]
 1618 0348 1946     		mov	r1, r3
 1619 034a 4FF01002 		mov	r2, #16
 1620 034e 4FF00003 		mov	r3, #0
 1621 0352 FFF7D5FE 		bl	printi
 1622 0356 0346     		mov	r3, r0
 1623 0358 E418     		adds	r4, r4, r3
 164:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1624              		.loc 1 164 0
 1625 035a 3AE0     		b	.L41
 1626              	.L44:
 165:../3rdParty/printf/printf-stdarg.c **** 			}
 166:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'u' ) {
 1627              		.loc 1 166 0
 1628 035c BB68     		ldr	r3, [r7, #8]
 1629 035e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1630 0360 752B     		cmp	r3, #117
 1631 0362 14D1     		bne	.L45
 167:../3rdParty/printf/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 0, width, pad, 'a');
 1632              		.loc 1 167 0
 1633 0364 7B68     		ldr	r3, [r7, #4]
 1634 0366 03F10402 		add	r2, r3, #4
 1635 036a 7A60     		str	r2, [r7, #4]
 1636 036c 1B68     		ldr	r3, [r3, #0]
 1637 036e 0095     		str	r5, [sp, #0]
 1638 0370 0196     		str	r6, [sp, #4]
 1639 0372 4FF06102 		mov	r2, #97
 1640 0376 0292     		str	r2, [sp, #8]
 1641 0378 F868     		ldr	r0, [r7, #12]
 1642 037a 1946     		mov	r1, r3
 1643 037c 4FF00A02 		mov	r2, #10
 1644 0380 4FF00003 		mov	r3, #0
 1645 0384 FFF7BCFE 		bl	printi
 1646 0388 0346     		mov	r3, r0
 1647 038a E418     		adds	r4, r4, r3
 168:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1648              		.loc 1 168 0
 1649 038c 21E0     		b	.L41
 1650              	.L45:
 169:../3rdParty/printf/printf-stdarg.c **** 			}
 170:../3rdParty/printf/printf-stdarg.c **** 			if( *format == 'c' ) {
 1651              		.loc 1 170 0
 1652 038e BB68     		ldr	r3, [r7, #8]
 1653 0390 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1654 0392 632B     		cmp	r3, #99
 1655 0394 1DD1     		bne	.L41
 171:../3rdParty/printf/printf-stdarg.c **** 				/* char are converted to int then pushed on the stack */
 172:../3rdParty/printf/printf-stdarg.c **** 				scr[0] = (char)va_arg( args, int );
 1656              		.loc 1 172 0
 1657 0396 7B68     		ldr	r3, [r7, #4]
 1658 0398 03F10402 		add	r2, r3, #4
 1659 039c 7A60     		str	r2, [r7, #4]
 1660 039e 1B68     		ldr	r3, [r3, #0]
 1661 03a0 DBB2     		uxtb	r3, r3
 1662 03a2 3B75     		strb	r3, [r7, #20]
 173:../3rdParty/printf/printf-stdarg.c **** 				scr[1] = '\0';
 1663              		.loc 1 173 0
 1664 03a4 4FF00003 		mov	r3, #0
 1665 03a8 7B75     		strb	r3, [r7, #21]
 174:../3rdParty/printf/printf-stdarg.c **** 				pc += prints (out, scr, width, pad);
 1666              		.loc 1 174 0
 1667 03aa 07F11403 		add	r3, r7, #20
 1668 03ae F868     		ldr	r0, [r7, #12]
 1669 03b0 1946     		mov	r1, r3
 1670 03b2 2A46     		mov	r2, r5
 1671 03b4 3346     		mov	r3, r6
 1672 03b6 FFF73BFE 		bl	prints
 1673 03ba 0346     		mov	r3, r0
 1674 03bc E418     		adds	r4, r4, r3
 175:../3rdParty/printf/printf-stdarg.c **** 				continue;
 1675              		.loc 1 175 0
 1676 03be 08E0     		b	.L41
 1677              	.L49:
 136:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '%') goto out;
 1678              		.loc 1 136 0
 1679 03c0 00BF     		nop
 1680              	.L28:
 176:../3rdParty/printf/printf-stdarg.c **** 			}
 177:../3rdParty/printf/printf-stdarg.c **** 		}
 178:../3rdParty/printf/printf-stdarg.c **** 		else {
 179:../3rdParty/printf/printf-stdarg.c **** 		out:
 180:../3rdParty/printf/printf-stdarg.c **** 			printchar (out, *format);
 1681              		.loc 1 180 0
 1682 03c2 BB68     		ldr	r3, [r7, #8]
 1683 03c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1684 03c6 F868     		ldr	r0, [r7, #12]
 1685 03c8 1946     		mov	r1, r3
 1686 03ca FFF719FE 		bl	printchar
 181:../3rdParty/printf/printf-stdarg.c **** 			++pc;
 1687              		.loc 1 181 0
 1688 03ce 04F10104 		add	r4, r4, #1
 1689              	.L41:
 131:../3rdParty/printf/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 1690              		.loc 1 131 0
 1691 03d2 BB68     		ldr	r3, [r7, #8]
 1692 03d4 03F10103 		add	r3, r3, #1
 1693 03d8 BB60     		str	r3, [r7, #8]
 1694              	.L27:
 131:../3rdParty/printf/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 1695              		.loc 1 131 0 is_stmt 0 discriminator 1
 1696 03da BB68     		ldr	r3, [r7, #8]
 1697 03dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1698 03de 002B     		cmp	r3, #0
 1699 03e0 7FF412AF 		bne	.L46
 1700 03e4 00E0     		b	.L30
 1701              	.L48:
 135:../3rdParty/printf/printf-stdarg.c **** 			if (*format == '\0') break;
 1702              		.loc 1 135 0 is_stmt 1
 1703 03e6 00BF     		nop
 1704              	.L30:
 182:../3rdParty/printf/printf-stdarg.c **** 		}
 183:../3rdParty/printf/printf-stdarg.c **** 	}
 184:../3rdParty/printf/printf-stdarg.c **** 	if (out) **out = '\0';
 1705              		.loc 1 184 0
 1706 03e8 FB68     		ldr	r3, [r7, #12]
 1707 03ea 002B     		cmp	r3, #0
 1708 03ec 04D0     		beq	.L47
 1709              		.loc 1 184 0 is_stmt 0 discriminator 1
 1710 03ee FB68     		ldr	r3, [r7, #12]
 1711 03f0 1B68     		ldr	r3, [r3, #0]
 1712 03f2 4FF00002 		mov	r2, #0
 1713 03f6 1A70     		strb	r2, [r3, #0]
 1714              	.L47:
 185:../3rdParty/printf/printf-stdarg.c **** 	va_end( args );
 186:../3rdParty/printf/printf-stdarg.c **** 	return pc;
 1715              		.loc 1 186 0 is_stmt 1
 1716 03f8 2346     		mov	r3, r4
 187:../3rdParty/printf/printf-stdarg.c **** }
 1717              		.loc 1 187 0
 1718 03fa 1846     		mov	r0, r3
 1719 03fc 07F11807 		add	r7, r7, #24
 1720 0400 BD46     		mov	sp, r7
 1721 0402 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1722              	.L52:
 1723 0406 00BF     		.align	2
 1724              	.L51:
 1725 0408 00000000 		.word	.LC0
 1726              		.cfi_endproc
 1727              	.LFE3:
 1729              		.align	2
 1730              		.global	printf
 1731              		.thumb
 1732              		.thumb_func
 1734              	printf:
 1735              	.LFB4:
 188:../3rdParty/printf/printf-stdarg.c **** 
 189:../3rdParty/printf/printf-stdarg.c **** int printf(const char *format, ...)
 190:../3rdParty/printf/printf-stdarg.c **** {
 1736              		.loc 1 190 0
 1737              		.cfi_startproc
 1738              		@ args = 4, pretend = 16, frame = 8
 1739              		@ frame_needed = 1, uses_anonymous_args = 1
 1740 040c 0FB4     		push	{r0, r1, r2, r3}
 1741              	.LCFI12:
 1742              		.cfi_def_cfa_offset 16
 1743 040e 80B5     		push	{r7, lr}
 1744              	.LCFI13:
 1745              		.cfi_def_cfa_offset 24
 1746 0410 82B0     		sub	sp, sp, #8
 1747              	.LCFI14:
 1748              		.cfi_def_cfa_offset 32
 1749 0412 00AF     		add	r7, sp, #0
 1750              		.cfi_offset 14, -20
 1751              		.cfi_offset 7, -24
 1752              		.cfi_offset 3, -4
 1753              		.cfi_offset 2, -8
 1754              		.cfi_offset 1, -12
 1755              		.cfi_offset 0, -16
 1756              	.LCFI15:
 1757              		.cfi_def_cfa_register 7
 191:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 192:../3rdParty/printf/printf-stdarg.c ****         
 193:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1758              		.loc 1 193 0
 1759 0414 07F11403 		add	r3, r7, #20
 1760 0418 7B60     		str	r3, [r7, #4]
 194:../3rdParty/printf/printf-stdarg.c ****         return print( 0, format, args );
 1761              		.loc 1 194 0
 1762 041a 4FF00000 		mov	r0, #0
 1763 041e 3969     		ldr	r1, [r7, #16]
 1764 0420 7A68     		ldr	r2, [r7, #4]
 1765 0422 FFF7E7FE 		bl	print
 1766 0426 0346     		mov	r3, r0
 195:../3rdParty/printf/printf-stdarg.c **** }
 1767              		.loc 1 195 0
 1768 0428 1846     		mov	r0, r3
 1769 042a 07F10807 		add	r7, r7, #8
 1770 042e BD46     		mov	sp, r7
 1771 0430 BDE88040 		pop	{r7, lr}
 1772 0434 04B0     		add	sp, sp, #16
 1773 0436 7047     		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE4:
 1777              		.align	2
 1778              		.global	sprintf
 1779              		.thumb
 1780              		.thumb_func
 1782              	sprintf:
 1783              	.LFB5:
 196:../3rdParty/printf/printf-stdarg.c **** 
 197:../3rdParty/printf/printf-stdarg.c **** int sprintf(char *out, const char *format, ...)
 198:../3rdParty/printf/printf-stdarg.c **** {
 1784              		.loc 1 198 0
 1785              		.cfi_startproc
 1786              		@ args = 4, pretend = 12, frame = 16
 1787              		@ frame_needed = 1, uses_anonymous_args = 1
 1788 0438 0EB4     		push	{r1, r2, r3}
 1789              	.LCFI16:
 1790              		.cfi_def_cfa_offset 12
 1791 043a 80B5     		push	{r7, lr}
 1792              	.LCFI17:
 1793              		.cfi_def_cfa_offset 20
 1794 043c 85B0     		sub	sp, sp, #20
 1795              	.LCFI18:
 1796              		.cfi_def_cfa_offset 40
 1797 043e 00AF     		add	r7, sp, #0
 1798              		.cfi_offset 14, -16
 1799              		.cfi_offset 7, -20
 1800              		.cfi_offset 3, -4
 1801              		.cfi_offset 2, -8
 1802              		.cfi_offset 1, -12
 1803              	.LCFI19:
 1804              		.cfi_def_cfa_register 7
 1805 0440 7860     		str	r0, [r7, #4]
 199:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 200:../3rdParty/printf/printf-stdarg.c ****         
 201:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1806              		.loc 1 201 0
 1807 0442 07F12003 		add	r3, r7, #32
 1808 0446 FB60     		str	r3, [r7, #12]
 202:../3rdParty/printf/printf-stdarg.c ****         return print( &out, format, args );
 1809              		.loc 1 202 0
 1810 0448 07F10403 		add	r3, r7, #4
 1811 044c 1846     		mov	r0, r3
 1812 044e F969     		ldr	r1, [r7, #28]
 1813 0450 FA68     		ldr	r2, [r7, #12]
 1814 0452 FFF7CFFE 		bl	print
 1815 0456 0346     		mov	r3, r0
 203:../3rdParty/printf/printf-stdarg.c **** }
 1816              		.loc 1 203 0
 1817 0458 1846     		mov	r0, r3
 1818 045a 07F11407 		add	r7, r7, #20
 1819 045e BD46     		mov	sp, r7
 1820 0460 BDE88040 		pop	{r7, lr}
 1821 0464 03B0     		add	sp, sp, #12
 1822 0466 7047     		bx	lr
 1823              		.cfi_endproc
 1824              	.LFE5:
 1826              		.align	2
 1827              		.global	snprintf
 1828              		.thumb
 1829              		.thumb_func
 1831              	snprintf:
 1832              	.LFB6:
 204:../3rdParty/printf/printf-stdarg.c **** 
 205:../3rdParty/printf/printf-stdarg.c **** 
 206:../3rdParty/printf/printf-stdarg.c **** int snprintf( char *buf, unsigned int count, const char *format, ... )
 207:../3rdParty/printf/printf-stdarg.c **** {
 1833              		.loc 1 207 0
 1834              		.cfi_startproc
 1835              		@ args = 4, pretend = 8, frame = 16
 1836              		@ frame_needed = 1, uses_anonymous_args = 1
 1837 0468 0CB4     		push	{r2, r3}
 1838              	.LCFI20:
 1839              		.cfi_def_cfa_offset 8
 1840 046a 80B5     		push	{r7, lr}
 1841              	.LCFI21:
 1842              		.cfi_def_cfa_offset 16
 1843 046c 84B0     		sub	sp, sp, #16
 1844              	.LCFI22:
 1845              		.cfi_def_cfa_offset 32
 1846 046e 00AF     		add	r7, sp, #0
 1847              		.cfi_offset 14, -12
 1848              		.cfi_offset 7, -16
 1849              		.cfi_offset 3, -4
 1850              		.cfi_offset 2, -8
 1851              	.LCFI23:
 1852              		.cfi_def_cfa_register 7
 1853 0470 7860     		str	r0, [r7, #4]
 1854 0472 3960     		str	r1, [r7, #0]
 208:../3rdParty/printf/printf-stdarg.c ****         va_list args;
 209:../3rdParty/printf/printf-stdarg.c ****         
 210:../3rdParty/printf/printf-stdarg.c ****         ( void ) count;
 211:../3rdParty/printf/printf-stdarg.c ****         
 212:../3rdParty/printf/printf-stdarg.c ****         va_start( args, format );
 1855              		.loc 1 212 0
 1856 0474 07F11C03 		add	r3, r7, #28
 1857 0478 FB60     		str	r3, [r7, #12]
 213:../3rdParty/printf/printf-stdarg.c ****         return print( &buf, format, args );
 1858              		.loc 1 213 0
 1859 047a 07F10403 		add	r3, r7, #4
 1860 047e 1846     		mov	r0, r3
 1861 0480 B969     		ldr	r1, [r7, #24]
 1862 0482 FA68     		ldr	r2, [r7, #12]
 1863 0484 FFF7B6FE 		bl	print
 1864 0488 0346     		mov	r3, r0
 214:../3rdParty/printf/printf-stdarg.c **** }
 1865              		.loc 1 214 0
 1866 048a 1846     		mov	r0, r3
 1867 048c 07F11007 		add	r7, r7, #16
 1868 0490 BD46     		mov	sp, r7
 1869 0492 BDE88040 		pop	{r7, lr}
 1870 0496 02B0     		add	sp, sp, #8
 1871 0498 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE6:
 1875 049a 00BF     		.align	2
 1876              		.global	write
 1877              		.thumb
 1878              		.thumb_func
 1880              	write:
 1881              	.LFB7:
 215:../3rdParty/printf/printf-stdarg.c **** 
 216:../3rdParty/printf/printf-stdarg.c **** 
 217:../3rdParty/printf/printf-stdarg.c **** #ifdef TEST_PRINTF
 218:../3rdParty/printf/printf-stdarg.c **** int main(void)
 219:../3rdParty/printf/printf-stdarg.c **** {
 220:../3rdParty/printf/printf-stdarg.c **** 	char *ptr = "Hello world!";
 221:../3rdParty/printf/printf-stdarg.c **** 	char *np = 0;
 222:../3rdParty/printf/printf-stdarg.c **** 	int i = 5;
 223:../3rdParty/printf/printf-stdarg.c **** 	unsigned int bs = sizeof(int)*8;
 224:../3rdParty/printf/printf-stdarg.c **** 	int mi;
 225:../3rdParty/printf/printf-stdarg.c **** 	char buf[80];
 226:../3rdParty/printf/printf-stdarg.c **** 
 227:../3rdParty/printf/printf-stdarg.c **** 	mi = (1 << (bs-1)) + 1;
 228:../3rdParty/printf/printf-stdarg.c **** 	printf("%s\n", ptr);
 229:../3rdParty/printf/printf-stdarg.c **** 	printf("printf test\n");
 230:../3rdParty/printf/printf-stdarg.c **** 	printf("%s is null pointer\n", np);
 231:../3rdParty/printf/printf-stdarg.c **** 	printf("%d = 5\n", i);
 232:../3rdParty/printf/printf-stdarg.c **** 	printf("%d = - max int\n", mi);
 233:../3rdParty/printf/printf-stdarg.c **** 	printf("char %c = 'a'\n", 'a');
 234:../3rdParty/printf/printf-stdarg.c **** 	printf("hex %x = ff\n", 0xff);
 235:../3rdParty/printf/printf-stdarg.c **** 	printf("hex %02x = 00\n", 0);
 236:../3rdParty/printf/printf-stdarg.c **** 	printf("signed %d = unsigned %u = hex %x\n", -3, -3, -3);
 237:../3rdParty/printf/printf-stdarg.c **** 	printf("%d %s(s)%", 0, "message");
 238:../3rdParty/printf/printf-stdarg.c **** 	printf("\n");
 239:../3rdParty/printf/printf-stdarg.c **** 	printf("%d %s(s) with %%\n", 0, "message");
 240:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "justif: \"%-10s\"\n", "left"); printf("%s", buf);
 241:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "justif: \"%10s\"\n", "right"); printf("%s", buf);
 242:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %04d zero padded\n", 3); printf("%s", buf);
 243:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %-4d left justif.\n", 3); printf("%s", buf);
 244:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, " 3: %4d right justif.\n", 3); printf("%s", buf);
 245:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %04d zero padded\n", -3); printf("%s", buf);
 246:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %-4d left justif.\n", -3); printf("%s", buf);
 247:../3rdParty/printf/printf-stdarg.c **** 	sprintf(buf, "-3: %4d right justif.\n", -3); printf("%s", buf);
 248:../3rdParty/printf/printf-stdarg.c **** 
 249:../3rdParty/printf/printf-stdarg.c **** 	return 0;
 250:../3rdParty/printf/printf-stdarg.c **** }
 251:../3rdParty/printf/printf-stdarg.c **** 
 252:../3rdParty/printf/printf-stdarg.c **** /*
 253:../3rdParty/printf/printf-stdarg.c ****  * if you compile this file with
 254:../3rdParty/printf/printf-stdarg.c ****  *   gcc -Wall $(YOUR_C_OPTIONS) -DTEST_PRINTF -c printf.c
 255:../3rdParty/printf/printf-stdarg.c ****  * you will get a normal warning:
 256:../3rdParty/printf/printf-stdarg.c ****  *   printf.c:214: warning: spurious trailing `%' in format
 257:../3rdParty/printf/printf-stdarg.c ****  * this line is testing an invalid % at the end of the format string.
 258:../3rdParty/printf/printf-stdarg.c ****  *
 259:../3rdParty/printf/printf-stdarg.c ****  * this should display (on 32bit int machine) :
 260:../3rdParty/printf/printf-stdarg.c ****  *
 261:../3rdParty/printf/printf-stdarg.c ****  * Hello world!
 262:../3rdParty/printf/printf-stdarg.c ****  * printf test
 263:../3rdParty/printf/printf-stdarg.c ****  * (null) is null pointer
 264:../3rdParty/printf/printf-stdarg.c ****  * 5 = 5
 265:../3rdParty/printf/printf-stdarg.c ****  * -2147483647 = - max int
 266:../3rdParty/printf/printf-stdarg.c ****  * char a = 'a'
 267:../3rdParty/printf/printf-stdarg.c ****  * hex ff = ff
 268:../3rdParty/printf/printf-stdarg.c ****  * hex 00 = 00
 269:../3rdParty/printf/printf-stdarg.c ****  * signed -3 = unsigned 4294967293 = hex fffffffd
 270:../3rdParty/printf/printf-stdarg.c ****  * 0 message(s)
 271:../3rdParty/printf/printf-stdarg.c ****  * 0 message(s) with %
 272:../3rdParty/printf/printf-stdarg.c ****  * justif: "left      "
 273:../3rdParty/printf/printf-stdarg.c ****  * justif: "     right"
 274:../3rdParty/printf/printf-stdarg.c ****  *  3: 0003 zero padded
 275:../3rdParty/printf/printf-stdarg.c ****  *  3: 3    left justif.
 276:../3rdParty/printf/printf-stdarg.c ****  *  3:    3 right justif.
 277:../3rdParty/printf/printf-stdarg.c ****  * -3: -003 zero padded
 278:../3rdParty/printf/printf-stdarg.c ****  * -3: -3   left justif.
 279:../3rdParty/printf/printf-stdarg.c ****  * -3:   -3 right justif.
 280:../3rdParty/printf/printf-stdarg.c ****  */
 281:../3rdParty/printf/printf-stdarg.c **** 
 282:../3rdParty/printf/printf-stdarg.c **** #endif
 283:../3rdParty/printf/printf-stdarg.c **** 
 284:../3rdParty/printf/printf-stdarg.c **** 
 285:../3rdParty/printf/printf-stdarg.c **** /* To keep linker happy. */
 286:../3rdParty/printf/printf-stdarg.c **** int	write( int i, char* c, int n)
 287:../3rdParty/printf/printf-stdarg.c **** {
 1882              		.loc 1 287 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 16
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886              		@ link register save eliminated.
 1887 049c 80B4     		push	{r7}
 1888              	.LCFI24:
 1889              		.cfi_def_cfa_offset 4
 1890 049e 85B0     		sub	sp, sp, #20
 1891              	.LCFI25:
 1892              		.cfi_def_cfa_offset 24
 1893 04a0 00AF     		add	r7, sp, #0
 1894              		.cfi_offset 7, -4
 1895              	.LCFI26:
 1896              		.cfi_def_cfa_register 7
 1897 04a2 F860     		str	r0, [r7, #12]
 1898 04a4 B960     		str	r1, [r7, #8]
 1899 04a6 7A60     		str	r2, [r7, #4]
 288:../3rdParty/printf/printf-stdarg.c **** 	(void)i;
 289:../3rdParty/printf/printf-stdarg.c **** 	(void)n;
 290:../3rdParty/printf/printf-stdarg.c **** 	(void)c;
 291:../3rdParty/printf/printf-stdarg.c **** 	return 0;
 1900              		.loc 1 291 0
 1901 04a8 4FF00003 		mov	r3, #0
 292:../3rdParty/printf/printf-stdarg.c **** }
 1902              		.loc 1 292 0
 1903 04ac 1846     		mov	r0, r3
 1904 04ae 07F11407 		add	r7, r7, #20
 1905 04b2 BD46     		mov	sp, r7
 1906 04b4 80BC     		pop	{r7}
 1907 04b6 7047     		bx	lr
 1908              		.cfi_endproc
 1909              	.LFE7:
 1911              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 printf-stdarg.c
     /tmp/ccySJkbi.s:1047   .text:00000000 $t
     /tmp/ccySJkbi.s:1051   .text:00000000 printchar
     /tmp/ccySJkbi.s:1099   .text:00000030 prints
     /tmp/ccySJkbi.s:1249   .text:00000100 printi
     /tmp/ccySJkbi.s:1401   .rodata:00000000 $d
     /tmp/ccySJkbi.s:1409   .text:000001f4 print
     /tmp/ccySJkbi.s:1725   .text:00000408 $d
     /tmp/ccySJkbi.s:1729   .text:0000040c $t
     /tmp/ccySJkbi.s:1734   .text:0000040c printf
     /tmp/ccySJkbi.s:1782   .text:00000438 sprintf
     /tmp/ccySJkbi.s:1831   .text:00000468 snprintf
     /tmp/ccySJkbi.s:1880   .text:0000049c write
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
